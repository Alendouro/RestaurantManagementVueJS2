{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Cook/PendingOrder.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Cook/PendingOrder.vue","mtime":1545825970754},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport OrdersAPI from '../../packages/api/Orders.js';\nimport swal from 'sweetalert';\nexport default {\n  name: \"pending-order\",\n  data: function data() {\n    return {\n      pendingOrders: [],\n      user: [],\n      backGroundColor: \"green\"\n    };\n  },\n  methods: {\n    fetchItems: function fetchItems(pageUrl) {\n      var _this = this;\n\n      this.axios.defaults.headers.common.Authorization = \"Bearer \" + this.$store.state.token;\n      OrdersAPI.getItems(pageUrl || '/api/orders/pending?paginate').then(function (pendingOrders) {\n        // Fill the items with the data received from API\n        _this.pendingOrders = pendingOrders.data;\n        console.log(_this.pendingOrders);\n      }).catch(function (error) {\n        if (error) {\n          swal(' ', 'There was an error while processing the request');\n        }\n      });\n    },\n    changeState: function changeState(order) {\n      this.axios.defaults.headers.common.Authorization = \"Bearer \" + this.$store.state.token;\n      OrdersAPI.changeState('/api/orders/changeState/' + order.id).then(function (response) {\n        // Fill the items with the data received from API\n        console.log(response);\n      }).catch(function (error) {\n        if (error) {\n          swal(' ', 'There was an error while processing the request');\n        }\n      });\n    },\n    imageItem: function imageItem(itemUrl) {\n      return 'http://restaurantmanagement.test/storage/items/' + itemUrl;\n    }\n  },\n  created: function created() {\n    this.user = this.$store.state.user;\n    this.fetchItems();\n  }\n};",{"version":3,"sources":["PendingOrder.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAA,SAAA,MAAA,8BAAA;AACA,OAAA,IAAA,MAAA,YAAA;AAEA,eAAA;AACA,QAAA,eADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,qBAAA,EADA;AAEA,YAAA,EAFA;AAGA,uBAAA;AAHA,KAAA;AAKA,GARA;AAUA,WAAA;AACA,cADA,sBACA,OADA,EACA;AAAA;;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,aAAA,GAAA,YAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA,gBAAA,QAAA,CAAA,WAAA,8BAAA,EACA,IADA,CACA,yBAAA;AACA;AACA,cAAA,aAAA,GAAA,cAAA,IAAA;AACA,gBAAA,GAAA,CAAA,MAAA,aAAA;AACA,OALA,EAMA,KANA,CAMA,iBAAA;AACA,YAAA,KAAA,EAAA;AACA,eAAA,GAAA,EAAA,iDAAA;AACA;AACA,OAVA;AAWA,KAdA;AAeA,eAfA,uBAeA,KAfA,EAeA;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,aAAA,GAAA,YAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA,gBAAA,WAAA,CAAA,6BAAA,MAAA,EAAA,EACA,IADA,CACA,oBAAA;AACA;AACA,gBAAA,GAAA,CAAA,QAAA;AACA,OAJA,EAKA,KALA,CAKA,iBAAA;AACA,YAAA,KAAA,EAAA;AACA,eAAA,GAAA,EAAA,iDAAA;AACA;AACA,OATA;AAUA,KA3BA;AA4BA,aA5BA,qBA4BA,OA5BA,EA4BA;AACA,aAAA,oDAAA,OAAA;AACA;AA9BA,GAVA;AA0CA,SA1CA,qBA0CA;AACA,SAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA;AACA,SAAA,UAAA;AACA;AA7CA,CAAA","sourcesContent":["<template>    \n  <div>\n    <md-table md-card>\n      <md-table-toolbar>\n        <h1 class=\"md-title\">Pending Orders</h1>\n      </md-table-toolbar>\n\n      <md-table-row slot=\"md-table-row\" v-for=\"order in pendingOrders\" :key=\"order.id\">\n        <md-table-cell md-label=\"Name\">{{ order.item.name }}</md-table-cell>\n        <md-button class=\"md-raised md-primary\" data-background-color=\"red\" @click=\"changeState(order)\">Confirm</md-button>\n      </md-table-row>\n    </md-table>\n  </div>\n</template>\n<script>\nimport OrdersAPI from '../../packages/api/Orders.js';\nimport swal from 'sweetalert';\n\nexport default {\n  name: \"pending-order\",\n  data() {\n    return {\n      pendingOrders: [],\n      user: [],\n      backGroundColor: \"green\",\n    };\n  },\n\n  methods: {\n    fetchItems(pageUrl) {\n      this.axios.defaults.headers.common.Authorization = \"Bearer \" + this.$store.state.token;\n      OrdersAPI.getItems(pageUrl || '/api/orders/pending?paginate')\n        .then(pendingOrders => {\n          // Fill the items with the data received from API\n          this.pendingOrders = pendingOrders.data;\n          console.log(this.pendingOrders);\n        })\n        .catch(error => {\n          if (error){\n            swal(' ', 'There was an error while processing the request');\n          }\n        });\n    },\n    changeState(order) {\n      this.axios.defaults.headers.common.Authorization = \"Bearer \" + this.$store.state.token;\n      OrdersAPI.changeState('/api/orders/changeState/' + order.id)\n        .then(response => {\n          // Fill the items with the data received from API\n          console.log(response);\n        })\n        .catch(error => {\n          if (error){\n            swal(' ', 'There was an error while processing the request');\n          }\n        });\n    },\n    imageItem(itemUrl){\n      return 'http://restaurantmanagement.test/storage/items/' + itemUrl;\n    },\n  },\n  created(){\n    this.user = this.$store.state.user;\n    this.fetchItems();   \n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped> \n\n</style>"],"sourceRoot":"src/pages/Cook"}]}