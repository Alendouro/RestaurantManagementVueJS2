{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/eslint-loader/index.js??ref--13-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Stats.js","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Stats.js","mtime":1546623817076},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport toastr from \"toastr\";\nexport default {\n  getUserPerformance: function getUserPerformance(user) {\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/users/\" + user.id + \"/performance\"\n    }).then(function (r) {\n      return r;\n    }).catch(function (err) {\n      var statusCode = err.response.status;\n\n      if (statusCode === 404) {\n        toastr.error(\"User was not found\", \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 403) {\n        toastr.error(err.response.data.error.message, \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 500) {\n        toastr.error(\"There was an internal error\", \"ERROR\");\n      }\n    });\n  },\n  getMealsHandled: function getMealsHandled() {\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/performance/meals\"\n    }).then(function (r) {\n      return r;\n    }).catch(function (err) {\n      var statusCode = err.response.status;\n\n      if (statusCode === 404) {\n        toastr.error(\"There is no data\", \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 403) {\n        toastr.error(err.response.data.error.message, \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 500) {\n        toastr.error(\"There was an internal error\", \"ERROR\");\n      }\n    });\n  },\n  getOrdersHandled: function getOrdersHandled() {\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/performance/orders\"\n    }).then(function (r) {\n      return r;\n    }).catch(function (err) {\n      var statusCode = err.response.status;\n\n      if (statusCode === 404) {\n        toastr.error(\"There is no data\", \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 403) {\n        toastr.error(err.response.data.error.message, \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 500) {\n        toastr.error(\"There was an internal error\", \"ERROR\");\n      }\n    });\n  },\n  getAverageTimeSpentOnMeal: function getAverageTimeSpentOnMeal() {\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/performance/meals/average\"\n    }).then(function (r) {\n      return r;\n    }).catch(function (err) {\n      var statusCode = err.response.status;\n\n      if (statusCode === 404) {\n        toastr.error(\"There is no data\", \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 403) {\n        toastr.error(err.response.data.error.message, \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 500) {\n        toastr.error(\"There was an internal error\", \"ERROR\");\n      }\n    });\n  },\n  getAverageMinutesOrdersPerMonth: function getAverageMinutesOrdersPerMonth() {\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/performance/orders/average\"\n    }).then(function (r) {\n      return r;\n    }).catch(function (err) {\n      var statusCode = err.response.status;\n\n      if (statusCode === 404) {\n        toastr.error(\"There is no data\", \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 403) {\n        toastr.error(err.response.data.error.message, \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 500) {\n        toastr.error(\"There was an internal error\", \"ERROR\");\n      }\n    });\n  }\n};",{"version":3,"sources":["/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Stats.js"],"names":["axios","toastr","getUserPerformance","user","method","url","id","then","r","catch","statusCode","err","response","status","error","data","message","getMealsHandled","getOrdersHandled","getAverageTimeSpentOnMeal","getAverageMinutesOrdersPerMonth"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport toastr from \"toastr\";\n\nexport default{\n  getUserPerformance(user){\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/users/\" + user.id + \"/performance\"\n    })\n      .then(r => {\n        return r;\n      })\n      .catch(err => {\n        let statusCode = err.response.status;\n        if (statusCode === 404) {\n          toastr.error(\"User was not found\", \"ERROR\");\n          return false;\n        }\n        if (statusCode === 403) {\n          toastr.error(err.response.data.error.message, \"ERROR\");\n          return false;\n        }\n        if (statusCode === 500) {\n          toastr.error(\"There was an internal error\", \"ERROR\");\n        }\n      });\n  },\n  getMealsHandled(){\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/performance/meals\"\n    })\n      .then(r => {\n        return r;\n      })\n      .catch(err => {\n        let statusCode = err.response.status;\n        if (statusCode === 404) {\n          toastr.error(\"There is no data\", \"ERROR\");\n          return false;\n        }\n        if (statusCode === 403) {\n          toastr.error(err.response.data.error.message, \"ERROR\");\n          return false;\n        }\n        if (statusCode === 500) {\n          toastr.error(\"There was an internal error\", \"ERROR\");\n        }\n      });\n  },\n  getOrdersHandled(){\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/performance/orders\"\n    })\n      .then(r => {\n        return r;\n      })\n      .catch(err => {\n        let statusCode = err.response.status;\n        if (statusCode === 404) {\n          toastr.error(\"There is no data\", \"ERROR\");\n          return false;\n        }\n        if (statusCode === 403) {\n          toastr.error(err.response.data.error.message, \"ERROR\");\n          return false;\n        }\n        if (statusCode === 500) {\n          toastr.error(\"There was an internal error\", \"ERROR\");\n        }\n      });\n  },\n  getAverageTimeSpentOnMeal(){\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/performance/meals/average\"\n    })\n      .then(r => {\n        return r;\n      })\n      .catch(err => {\n        let statusCode = err.response.status;\n        if (statusCode === 404) {\n          toastr.error(\"There is no data\", \"ERROR\");\n          return false;\n        }\n        if (statusCode === 403) {\n          toastr.error(err.response.data.error.message, \"ERROR\");\n          return false;\n        }\n        if (statusCode === 500) {\n          toastr.error(\"There was an internal error\", \"ERROR\");\n        }\n      });\n  },\n  getAverageMinutesOrdersPerMonth(){\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/performance/orders/average\"\n    })\n      .then(r => {\n        return r;\n      })\n      .catch(err => {\n        let statusCode = err.response.status;\n        if (statusCode === 404) {\n          toastr.error(\"There is no data\", \"ERROR\");\n          return false;\n        }\n        if (statusCode === 403) {\n          toastr.error(err.response.data.error.message, \"ERROR\");\n          return false;\n        }\n        if (statusCode === 500) {\n          toastr.error(\"There was an internal error\", \"ERROR\");\n        }\n      });\n  }\n}"]}]}