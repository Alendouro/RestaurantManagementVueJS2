{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/eslint-loader/index.js??ref--13-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Orders.js","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Orders.js","mtime":1546767278130},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from \"axios\";\nimport toastr from 'toastr';\nexport default {\n  getItems: function getItems(page) {\n    return axios.get(page).then(function (response) {\n      // We can do some logic that concern only the API and then return promise\n      return response.data;\n    }).catch(function (error) {\n      if (error) {\n        console.log(\"There was an internal error\");\n      }\n    });\n  },\n  createOrder: function createOrder(mealID, itemID) {\n    return axios({\n      method: \"POST\",\n      url: \"/api/orders\",\n      data: {\n        meal_id: mealID,\n        item_id: itemID\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      if (error) {\n        toastr.error(\"There was an internal error\");\n      }\n    });\n  },\n  getMyOrders: function getMyOrders(filters) {\n    // If it has filter we need to construct the parameters\n    var parameters = \"\";\n    filters.forEach(function (e, i) {\n      if (i === 0) {\n        // If it is the first parameter then we need to insert '?'\n        parameters += \"?filters[]=\" + e;\n      } else {\n        // otherwise just insert the & symbol\n        parameters += \"&filters[]=\" + e;\n      }\n    });\n    return axios({\n      method: \"GET\",\n      url: \"/api/orders/waiter/my\" + (parameters === \"\" ? \"\" : \"/\" + parameters)\n    }).catch(function (error) {\n      if (error) {\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    });\n  },\n  updateOrderToDelivered: function updateOrderToDelivered(orderID) {\n    return axios({\n      method: \"PUT\",\n      url: \"/api/orders/delivered/\" + orderID\n    }).catch(function (error) {\n      if (error) {\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    });\n  },\n  changeState: function changeState(page) {\n    return axios.put(page).then(function (response) {\n      // We can do some logic that concern only the API and then return promise\n      return response;\n    }).catch(function (error) {\n      if (error) {\n        return false;\n      }\n    });\n  }\n};",{"version":3,"sources":["/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Orders.js"],"names":["axios","toastr","getItems","page","get","then","response","data","catch","error","console","log","createOrder","mealID","itemID","method","url","meal_id","item_id","getMyOrders","filters","parameters","forEach","e","i","updateOrderToDelivered","orderID","changeState","put"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAc;AACZC,UADY,oBACHC,IADG,EACG;AACb,WAAOH,MAAMI,GAAN,CAAUD,IAAV,EAAgBE,IAAhB,CAAqB,oBAAY;AACtC;AACA,aAAOC,SAASC,IAAhB;AACD,KAHM,EAGJC,KAHI,CAGE,iBAAS;AAChB,UAAIC,KAAJ,EAAW;AACTC,gBAAQC,GAAR,CAAY,6BAAZ;AACD;AACF,KAPM,CAAP;AAQD,GAVW;AAYZC,aAZY,uBAYAC,MAZA,EAYQC,MAZR,EAYgB;AAC1B,WAAOd,MAAM;AACXe,cAAQ,MADG;AAEXC,WAAK,aAFM;AAGXT,YAAM;AACJU,iBAASJ,MADL;AAEJK,iBAASJ;AAFL;AAHK,KAAN,EAOJT,IAPI,CAOC,oBAAY;AAClB,aAAOC,SAASC,IAAhB;AACD,KATM,EAUJC,KAVI,CAUE,iBAAS;AACd,UAAIC,KAAJ,EAAW;AACTR,eAAOQ,KAAP,CAAa,6BAAb;AACD;AACF,KAdI,CAAP;AAeD,GA5BW;AA8BZU,aA9BY,uBA8BAC,OA9BA,EA8BS;AACnB;AACA,QAAIC,aAAa,EAAjB;AACAD,YAAQE,OAAR,CAAgB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxB,UAAIA,MAAM,CAAV,EAAa;AACX;AACAH,sBAAc,gBAAgBE,CAA9B;AACD,OAHD,MAGO;AACL;AACAF,sBAAc,gBAAgBE,CAA9B;AACD;AACF,KARD;AAUA,WAAOvB,MAAM;AACXe,cAAQ,KADG;AAEXC,WAAK,2BAA2BK,eAAe,EAAf,GAAoB,EAApB,GAAyB,MAAMA,UAA1D;AAFM,KAAN,EAGJb,KAHI,CAGE,iBAAS;AAChB,UAAIC,KAAJ,EAAW;AACTR,eAAOQ,KAAP,CAAa,6BAAb;AACA,eAAO,KAAP;AACD;AACF,KARM,CAAP;AASD,GApDW;AAsDZgB,wBAtDY,kCAsDWC,OAtDX,EAsDmB;AAC7B,WAAO1B,MAAM;AACXe,cAAQ,KADG;AAEXC,WAAK,2BAA2BU;AAFrB,KAAN,EAGJlB,KAHI,CAGE,iBAAS;AAChB,UAAIC,KAAJ,EAAW;AACTR,eAAOQ,KAAP,CAAa,6BAAb;AACA,eAAO,KAAP;AACD;AACF,KARM,CAAP;AASD,GAhEW;AAiEZkB,aAjEY,uBAiEAxB,IAjEA,EAiEM;AAChB,WAAOH,MACJ4B,GADI,CACAzB,IADA,EAEJE,IAFI,CAEC,oBAAY;AAClB;AACA,aAAOC,QAAP;AACD,KALM,EAMJE,KANI,CAME,iBAAS;AACd,UAAIC,KAAJ,EAAW;AACT,eAAO,KAAP;AACD;AACF,KAVI,CAAP;AAWD;AA7EW,CAAd","sourcesContent":["import axios from \"axios\";\nimport toastr from 'toastr';\n\nexport default{\n  getItems(page) {\n    return axios.get(page).then(response => {\n      // We can do some logic that concern only the API and then return promise\n      return response.data;\n    }).catch(error => {\n      if (error) {\n        console.log(\"There was an internal error\");\n      }\n    });\n  },\n\n  createOrder(mealID, itemID) {\n    return axios({\n      method: \"POST\",\n      url: \"/api/orders\",\n      data: {\n        meal_id: mealID,\n        item_id: itemID\n      }\n    }).then(response => {\n      return response.data;\n    })\n      .catch(error => {\n        if (error) {\n          toastr.error(\"There was an internal error\");\n        }\n      });\n  },\n\n  getMyOrders(filters) {\n    // If it has filter we need to construct the parameters\n    let parameters = \"\";\n    filters.forEach((e, i) => {\n      if (i === 0) {\n        // If it is the first parameter then we need to insert '?'\n        parameters += \"?filters[]=\" + e;\n      } else {\n        // otherwise just insert the & symbol\n        parameters += \"&filters[]=\" + e;\n      }\n    });\n\n    return axios({\n      method: \"GET\",\n      url: \"/api/orders/waiter/my\" + (parameters === \"\" ? \"\" : \"/\" + parameters),\n    }).catch(error => {\n      if (error) {\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    });\n  },\n\n  updateOrderToDelivered(orderID){\n    return axios({\n      method: \"PUT\",\n      url: \"/api/orders/delivered/\" + orderID\n    }).catch(error => {\n      if (error) {\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    });\n  },\n  changeState(page) {\n    return axios\n      .put(page)\n      .then(response => {\n      // We can do some logic that concern only the API and then return promise\n      return response;\n    })\n      .catch(error => {\n        if (error) {\n          return false;\n        }\n      });\n  },\n};"]}]}