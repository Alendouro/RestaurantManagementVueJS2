{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Dashboard/DashboardManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Dashboard/DashboardManager.vue","mtime":1546433593311},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MealsAPI from \"../../packages/api/Meals.js\";\nimport InvoiceAPI from \"../../packages/api/Invoice.js\";\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport URLFormatter from '../../packages/url/URLFormatter.js';\nexport default {\n  data: function data() {\n    return {\n      invoices: {\n        pending: []\n      },\n      meals: {\n        terminated: []\n      }\n    };\n  },\n  methods: {\n    // ------- GET METHODS\n    getMealsTerminated: function getMealsTerminated() {\n      var _this = this;\n\n      MealsAPI.getTerminated().then(function (r) {\n        _this.meals.terminated = r.data;\n      });\n    },\n    getInvoicePending: function getInvoicePending(withMeal) {\n      var _this2 = this;\n\n      InvoiceAPI.getPending(withMeal).then(function (r) {\n        _this2.invoices.pending = r.data;\n      });\n    },\n    // ------ PUT METHODS\n    putDeclareMealNotPaid: function putDeclareMealNotPaid(meal) {\n      var _this3 = this;\n\n      MealsAPI.putMealNotPaid(meal).then(function (r) {\n        if (r.status !== 200) {\n          toastr.error('There was an error updating the meal', 'ERROR');\n          return;\n        }\n\n        var mealsTerminated = _this3.meals.terminated.slice();\n\n        _.remove(mealsTerminated, function (currentMeal) {\n          return currentMeal.id === meal.id;\n        });\n\n        _this3.meals.terminated = mealsTerminated;\n        toastr.success('Meal was updated successfully', 'SUCCESS');\n      });\n    },\n    putDeclareInvoiceNotPaid: function putDeclareInvoiceNotPaid(invoice) {\n      var _this4 = this;\n\n      InvoiceAPI.putDeclareInvoiceNotPaid(invoice).then(function (r) {\n        if (r.status !== 200) {\n          toastr.error('There was an error updating the invoice', 'ERROR');\n          return;\n        }\n\n        var invoicesPending = _this4.invoices.pending.slice();\n\n        _.remove(invoicesPending, function (currentInvoice) {\n          return currentInvoice.id === invoice.id;\n        });\n\n        _this4.invoices.pending = invoicesPending;\n        toastr.success('Invoice was updated successfully', 'SUCCESS');\n      });\n    },\n    // ------- AUXILIARY METHODS\n    groupedItems: function groupedItems(items, columns) {\n      return _.chunk(items, columns);\n    },\n    imageItem: function imageItem(itemUrl) {\n      return URLFormatter.imageItem(itemUrl);\n    },\n    declareNotPaid: function declareNotPaid(item, type) {\n      if (type === 'meal') {\n        this.putDeclareMealNotPaid(item);\n      }\n\n      if (type === 'invoice') {\n        this.putDeclareInvoiceNotPaid(item);\n      }\n    }\n  },\n  created: function created() {\n    this.getMealsTerminated();\n    this.getInvoicePending(true);\n  }\n};",{"version":3,"sources":["DashboardManager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,UAAA,MAAA,+BAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,OAAA,YAAA,MAAA,oCAAA;AAGA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,gBAAA;AACA,iBAAA;AADA,OADA;AAIA,aAAA;AACA,oBAAA;AADA;AAJA,KAAA;AAQA,GAVA;AAWA,WAAA;AACA;AACA,sBAFA,gCAEA;AAAA;;AACA,eAAA,aAAA,GAAA,IAAA,CAAA,aAAA;AACA,cAAA,KAAA,CAAA,UAAA,GAAA,EAAA,IAAA;AACA,OAFA;AAGA,KANA;AAOA,qBAPA,6BAOA,QAPA,EAOA;AAAA;;AACA,iBAAA,UAAA,CAAA,QAAA,EAAA,IAAA,CAAA,aAAA;AACA,eAAA,QAAA,CAAA,OAAA,GAAA,EAAA,IAAA;AACA,OAFA;AAGA,KAXA;AAaA;AACA,yBAdA,iCAcA,IAdA,EAcA;AAAA;;AACA,eAAA,cAAA,CAAA,IAAA,EAAA,IAAA,CAAA,aAAA;AACA,YAAA,EAAA,MAAA,KAAA,GAAA,EAAA;AACA,iBAAA,KAAA,CAAA,sCAAA,EAAA,OAAA;AACA;AACA;;AAEA,YAAA,kBAAA,OAAA,KAAA,CAAA,UAAA,CAAA,KAAA,EAAA;;AAEA,UAAA,MAAA,CAAA,eAAA,EAAA,UAAA,WAAA,EAAA;AACA,iBAAA,YAAA,EAAA,KAAA,KAAA,EAAA;AACA,SAFA;;AAIA,eAAA,KAAA,CAAA,UAAA,GAAA,eAAA;AAEA,eAAA,OAAA,CAAA,+BAAA,EAAA,SAAA;AACA,OAfA;AAgBA,KA/BA;AAgCA,4BAhCA,oCAgCA,OAhCA,EAgCA;AAAA;;AACA,iBAAA,wBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,aAAA;AACA,YAAA,EAAA,MAAA,KAAA,GAAA,EAAA;AACA,iBAAA,KAAA,CAAA,yCAAA,EAAA,OAAA;AACA;AACA;;AAEA,YAAA,kBAAA,OAAA,QAAA,CAAA,OAAA,CAAA,KAAA,EAAA;;AAEA,UAAA,MAAA,CAAA,eAAA,EAAA,UAAA,cAAA,EAAA;AACA,iBAAA,eAAA,EAAA,KAAA,QAAA,EAAA;AACA,SAFA;;AAIA,eAAA,QAAA,CAAA,OAAA,GAAA,eAAA;AAEA,eAAA,OAAA,CAAA,kCAAA,EAAA,SAAA;AACA,OAfA;AAgBA,KAjDA;AAmDA;AACA,gBApDA,wBAoDA,KApDA,EAoDA,OApDA,EAoDA;AACA,aAAA,EAAA,KAAA,CAAA,KAAA,EAAA,OAAA,CAAA;AACA,KAtDA;AAwDA,aAxDA,qBAwDA,OAxDA,EAwDA;AACA,aAAA,aAAA,SAAA,CAAA,OAAA,CAAA;AACA,KA1DA;AA4DA,kBA5DA,0BA4DA,IA5DA,EA4DA,IA5DA,EA4DA;AACA,UAAA,SAAA,MAAA,EAAA;AACA,aAAA,qBAAA,CAAA,IAAA;AACA;;AAEA,UAAA,SAAA,SAAA,EAAA;AACA,aAAA,wBAAA,CAAA,IAAA;AACA;AACA;AApEA,GAXA;AAkFA,SAlFA,qBAkFA;AACA,SAAA,kBAAA;AACA,SAAA,iBAAA,CAAA,IAAA;AACA;AArFA,CAAA","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <!-- DASHBOARD MENU -->\n            <md-card>\n              <md-card-header data-background-color=\"green\">\n                <h4 class=\"title\">Invoices <small>pending</small> & Meals <small>terminated</small></h4>\n              </md-card-header>\n              <md-card-content>\n                <table class=\"table\">\n                  <thead>\n                  <tr>\n                    <th>Table number</th>\n                    <th>Start</th>\n                    <th>Total price</th>\n                    <th></th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr v-for=\"(meal) in meals.terminated\" :key=\"meal.id\">\n                    <td class=\"pt-4\">{{ meal.table_number }}</td>\n                    <td class=\"pt-4\">{{ moment(meal.start).format('DD/MM/YYYY H:m') }}</td>\n                    <td class=\"pt-4\">{{ meal.total_price_preview }}€</td>\n                    <td>\n                      <md-tooltip md-direction=\"top\">Declare this meal as not paid</md-tooltip>\n                      <md-button class=\"m-0 md-danger md-block\" @click=\"declareNotPaid(meal, 'meal')\"><md-icon >money_off</md-icon></md-button>\n                    </td>\n                  </tr>\n                  <tr v-for=\"(invoice) in invoices.pending\" :key=\"invoice.id\">\n                    <td class=\"pt-4\">{{ invoice.meal.table_number }}</td>\n                    <td class=\"pt-4\">{{ moment(invoice.start).format('DD-MM-YYYY H:m') }}</td>\n                    <td class=\"pt-4\">{{ invoice.total_price }}€</td>\n                    <td>\n                      <md-tooltip md-direction=\"top\">Declare this invoice as not paid</md-tooltip>\n                      <md-button class=\"m-0 md-danger md-block\" @click=\"declareNotPaid(invoice, 'invoice')\"><md-icon >money_off</md-icon></md-button>\n                    </td>\n                  </tr>\n                  </tbody>\n                </table>\n              </md-card-content>\n            </md-card>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n\nimport MealsAPI from \"../../packages/api/Meals.js\";\nimport InvoiceAPI from \"../../packages/api/Invoice.js\";\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport URLFormatter from '../../packages/url/URLFormatter.js'\n\n\nexport default {\n  data() {\n    return {\n      invoices: {\n        pending: [],\n      },\n      meals: {\n        terminated: [],\n      },\n    };\n  },\n  methods: {\n    // ------- GET METHODS\n    getMealsTerminated(){\n      MealsAPI.getTerminated().then(r => {\n        this.meals.terminated = r.data;\n      });\n    },\n    getInvoicePending(withMeal){\n      InvoiceAPI.getPending(withMeal).then(r => {\n        this.invoices.pending = r.data;\n      });\n    },\n\n    // ------ PUT METHODS\n    putDeclareMealNotPaid(meal){\n      MealsAPI.putMealNotPaid(meal).then(r => {\n        if(r.status !== 200){\n          toastr.error('There was an error updating the meal', 'ERROR');\n          return;\n        }\n\n        const mealsTerminated = this.meals.terminated.slice();\n\n        _.remove(mealsTerminated, (currentMeal) => {\n          return currentMeal.id === meal.id;\n        });\n\n        this.meals.terminated = mealsTerminated;\n\n        toastr.success('Meal was updated successfully', 'SUCCESS');\n      });\n    },\n    putDeclareInvoiceNotPaid(invoice){\n      InvoiceAPI.putDeclareInvoiceNotPaid(invoice).then(r => {\n        if(r.status !== 200){\n          toastr.error('There was an error updating the invoice', 'ERROR');\n          return;\n        }\n\n        const invoicesPending = this.invoices.pending.slice();\n\n        _.remove(invoicesPending, (currentInvoice) => {\n          return currentInvoice.id === invoice.id;\n        });\n\n        this.invoices.pending = invoicesPending;\n\n        toastr.success('Invoice was updated successfully', 'SUCCESS');\n      });\n    },\n\n    // ------- AUXILIARY METHODS\n    groupedItems(items, columns){\n      return _.chunk(items, columns);\n    },\n\n    imageItem(itemUrl){\n      return URLFormatter.imageItem(itemUrl);\n    },\n\n    declareNotPaid(item, type){\n      if(type === 'meal'){\n        this.putDeclareMealNotPaid(item);\n      }\n\n      if(type === 'invoice'){\n        this.putDeclareInvoiceNotPaid(item);\n      }\n    },\n  },\n\n  created(){\n    this.getMealsTerminated();\n    this.getInvoicePending(true);\n  },\n};\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n<style scoped>\n  .title > small {\n    font-size: 12px;\n  }\n</style>\n"],"sourceRoot":"src/pages/Dashboard"}]}