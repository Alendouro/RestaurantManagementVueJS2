{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/eslint-loader/index.js??ref--13-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Tables.js","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Tables.js","mtime":1545828045911},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from \"axios\";\nimport toastr from \"toastr\";\nexport default {\n  getTables: function getTables() {\n    // We can do some logic that concern only the API and then return promise\n    return axios({\n      method: \"GET\",\n      url: \"/api/tables\"\n    }).then(function (response) {\n      return response;\n    }).catch(function (error) {\n      if (error) {\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    });\n  },\n  getFreeTables: function getFreeTables() {\n    return axios({\n      method: \"GET\",\n      url: \"/api/tables/free\"\n    }).then(function (response) {\n      return response;\n    }).catch(function (error) {\n      if (error) {\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    });\n  },\n  deleteTable: function deleteTable(tableID) {\n    return axios({\n      method: \"DELETE\",\n      url: \"api/tables/\" + tableID\n    }).then(function (r) {\n      return r;\n    }).catch(function (err) {\n      if (err) {\n        toastr.error(\"There was an error deleting table\");\n        return false;\n      }\n    });\n  }\n};",{"version":3,"sources":["/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Tables.js"],"names":["axios","toastr","getTables","method","url","then","response","catch","error","getFreeTables","deleteTable","tableID","r","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAc;AACZC,WADY,uBACD;AACT;AACA,WAAOF,MAAM;AACXG,cAAQ,KADG;AAEXC,WAAK;AAFM,KAAN,EAIJC,IAJI,CAIC,oBAAY;AAChB,aAAOC,QAAP;AACD,KANI,EAOJC,KAPI,CAOE,iBAAS;AACd,UAAIC,KAAJ,EAAU;AACRP,eAAOO,KAAP,CAAa,6BAAb;AACA,eAAO,KAAP;AACD;AACF,KAZI,CAAP;AAaD,GAhBW;AAiBZC,eAjBY,2BAiBG;AACb,WAAOT,MAAM;AACXG,cAAQ,KADG;AAEXC,WAAK;AAFM,KAAN,EAIJC,IAJI,CAIC,oBAAY;AAChB,aAAOC,QAAP;AACD,KANI,EAOJC,KAPI,CAOE,iBAAS;AACd,UAAIC,KAAJ,EAAU;AACRP,eAAOO,KAAP,CAAa,6BAAb;AACA,eAAO,KAAP;AACD;AACF,KAZI,CAAP;AAaD,GA/BW;AAgCZE,aAhCY,uBAgCAC,OAhCA,EAgCQ;AAClB,WAAOX,MAAM;AACXG,cAAQ,QADG;AAEXC,WAAK,gBAAgBO;AAFV,KAAN,EAGJN,IAHI,CAGC,aAAK;AACX,aAAOO,CAAP;AACD,KALM,EAKJL,KALI,CAKE,eAAQ;AACf,UAAGM,GAAH,EAAO;AACLZ,eAAOO,KAAP,CAAa,mCAAb;AACA,eAAO,KAAP;AACD;AACF,KAVM,CAAP;AAWD;AA5CW,CAAd","sourcesContent":["import axios from \"axios\";\nimport toastr from \"toastr\";\n\nexport default{\n  getTables(){\n    // We can do some logic that concern only the API and then return promise\n    return axios({\n      method: \"GET\",\n      url: \"/api/tables\",\n    })\n      .then(response => {\n        return response;\n      })\n      .catch(error => {\n        if (error){\n          toastr.error(\"There was an internal error\");\n          return false;\n        }\n      });\n  },\n  getFreeTables(){\n    return axios({\n      method: \"GET\",\n      url: \"/api/tables/free\",\n    })\n      .then(response => {\n        return response;\n      })\n      .catch(error => {\n        if (error){\n          toastr.error(\"There was an internal error\");\n          return false;\n        }\n      });\n  },\n  deleteTable(tableID){\n    return axios({\n      method: \"DELETE\",\n      url: \"api/tables/\" + tableID\n    }).then(r => {\n      return r;\n    }).catch(err =>  {\n      if(err){\n        toastr.error(\"There was an error deleting table\");\n        return false;\n      }\n    });\n  }\n}"]}]}