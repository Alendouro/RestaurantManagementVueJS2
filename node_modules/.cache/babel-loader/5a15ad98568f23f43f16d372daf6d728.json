{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Dashboard/DashboardWaiter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Dashboard/DashboardWaiter.vue","mtime":1545829119036},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/@babel/runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TablesAPI from \"../../packages/api/Tables.js\";\nimport MealsAPI from \"../../packages/api/Meals.js\";\nimport ItemsAPI from \"../../packages/api/Items.js\";\nimport OrderAPI from \"../../packages/api/Orders.js\";\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport swal from \"sweetalert\";\nexport default {\n  data: function data() {\n    return {\n      user: [],\n      freeTables: [],\n      myActiveMeals: [],\n      createMeal: {\n        table: 0\n      },\n      toggles: {\n        addMeal: false,\n        insertItemDishes: false,\n        insertItemDrinks: false,\n        chooseItemType: false,\n        activeMeals: true,\n        addItemToMeal: false,\n        mealOrders: false\n      },\n      allItems: {\n        drinks: [],\n        dishes: []\n      },\n      mealSelected: {\n        id: null,\n        table_number: null,\n        orders: [],\n        total: 0\n      }\n    };\n  },\n  methods: {\n    getFreeTables: function getFreeTables() {\n      var _this = this;\n\n      TablesAPI.getFreeTables().then(function (response) {\n        _this.freeTables = response.data;\n      });\n    },\n    getMyActiveMeals: function getMyActiveMeals() {\n      var _this2 = this;\n\n      MealsAPI.getMyActiveMeals().then(function (response) {\n        _this2.myActiveMeals = response.data;\n      });\n    },\n    getItems: function getItems() {\n      var _this3 = this;\n\n      // No need to paginate the results here\n      ItemsAPI.getItems('/api/items').then(function (items) {\n        if (items) {\n          items.data.forEach(function (e, i) {\n            if (e.type === 'dish') {\n              _this3.allItems.dishes.push(e);\n            }\n\n            if (e.type === 'drink') {\n              _this3.allItems.drinks.push(e);\n            }\n          });\n        }\n      });\n    },\n    getMealOrders: function getMealOrders(filters, mealID) {\n      var _this4 = this;\n\n      MealsAPI.getOrders(filters, mealID).then(function (orders) {\n        var meal = _this4.mealSelected;\n        meal.orders = orders.data;\n        meal.total = _.sumBy(_this4.mealSelected.orders, function (order) {\n          return _parseFloat(order.item.price);\n        });\n        _this4.mealSelected = meal;\n      });\n    },\n    groupedItems: function groupedItems(items, columns) {\n      return _.chunk(items, columns);\n    },\n    insertMeal: function insertMeal() {\n      var _this5 = this;\n\n      MealsAPI.postNewMeal(this.createMeal.table).then(function (response) {\n        // We need to add the table to the array of tables\n        _this5.myActiveMeals.push(response.data); // Re-order the myactive meals\n\n\n        _this5.myActiveMeals = _.orderBy(_this5.myActiveMeals, ['table_number']);\n\n        if (response.status === 201) {\n          // Remove from the array of free tables the one we just added\n          _.remove(_this5.freeTables, function (currentTable) {\n            return currentTable.table_number === _this5.createMeal.table;\n          });\n\n          swal('Meal registered with success', ' ', 'success');\n          return false;\n        }\n\n        if (response.status === 403) {\n          swal(response.data.error.message, ' ', 'error');\n          return false;\n        }\n\n        swal(response.data.error.message, ' ', 'error');\n      });\n    },\n    toggle: function toggle(section, mealID, table_number) {\n      if (section === \"addMeal\") {\n        this.toggles.addMeal = true; // Scroll to the bottom of the page in case there are several tables\n\n        window.scrollTo(0, document.body.scrollHeight);\n        return;\n      }\n\n      if (section === \"insertItemDishes\" || section === \"insertItemDrinks\") {\n        if (section === \"insertItemDishes\") {\n          this.toggles.insertItemDishes = true;\n          this.toggles.insertItemDrinks = false;\n        } else {\n          this.toggles.insertItemDrinks = true;\n          this.toggles.insertItemDishes = false;\n        }\n\n        return;\n      }\n\n      if (section === \"chooseItemType\") {\n        this.toggles.addItemToMeal = true;\n        this.toggles.insertItemDishes = true;\n        this.toggles.chooseItemType = true;\n        this.toggles.activeMeals = false;\n        this.mealSelected.id = mealID;\n        this.mealSelected.table_number = table_number;\n        this.toggles.addItemToMeal = true;\n        return;\n      }\n\n      if (section === \"backToActiveMeals\") {\n        this.toggles.addItemToMeal = false;\n        this.toggles.insertItemDishes = false;\n        this.toggles.chooseItemType = false;\n        this.toggles.activeMeals = true;\n        this.toggles.addItemToMeal = false;\n        this.toggles.mealOrders = false;\n        return;\n      }\n\n      if (section === \"viewOrdersMeal\") {\n        this.toggles.addItemToMeal = false;\n        this.toggles.insertItemDishes = false;\n        this.toggles.chooseItemType = false;\n        this.toggles.activeMeals = false;\n        this.mealSelected.id = mealID;\n        this.mealSelected.table_number = table_number;\n        this.toggles.addItemToMeal = false;\n        this.toggles.mealOrders = true;\n        this.getMealOrders([], mealID);\n      }\n    },\n    createOrder: function createOrder(itemID, itemName) {\n      // TODO ME NEEDS TO WAIT 5 SECONDS AND BE ABLE TO CANCEL ORDER\n      OrderAPI.createOrder(this.mealSelected.id, itemID).then(function (response) {\n        // Check if there is an error\n        if (response) {\n          toastr.success(itemName + ' added succesfully');\n        }\n      });\n    },\n    closeMeal: function closeMeal(mealID) {\n      var _this6 = this;\n\n      MealsAPI.postCloseMeal([], mealID).then(function (response) {\n        // The error will represent that this meal has an order that wasn't delivered.\n        // This will prompt the system to ask the waiter if she/he would like\n        // to close the meal anyway and the meals not be considered.\n        if (response.data.errors) {\n          swal(response.data.errors.message, {\n            icon: \"warning\",\n            buttons: {\n              cancel: \"No\",\n              catch: {\n                text: \"Delete dishes\",\n                value: \"delete\"\n              }\n            }\n          }).then(function (value) {\n            switch (value) {\n              case \"delete\":\n                MealsAPI.postCloseMeal(['eliminateNotDelivered'], mealID).then(function (response) {\n                  // console.log(response);\n                  swal(\"Meal closed\", \"Your meal has been closed and all products different than 'delivered' set to 'not delivered'\", \"success\");\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n                _this6.removeMealFromArray(mealID);\n\n                break;\n            }\n          });\n          return;\n        }\n\n        _this6.removeMealFromArray(mealID);\n\n        swal(\"Meal has been closed successfully\", \"\", \"success\");\n      });\n    },\n    removeMealFromArray: function removeMealFromArray(mealID) {\n      var meals = this.myActiveMeals.slice();\n\n      _.remove(meals, function (meal) {\n        return meal.id === _parseInt(mealID);\n      });\n\n      this.myActiveMeals = meals;\n    }\n  },\n  created: function created() {\n    this.getItems();\n    this.getMyActiveMeals();\n    this.getFreeTables();\n    this.user = this.$store.state.user;\n  }\n};",{"version":3,"sources":["DashboardWaiter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA,OAAA,SAAA,MAAA,8BAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,QAAA,MAAA,8BAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,OAAA,IAAA,MAAA,YAAA;AAGA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA,EADA;AAEA,kBAAA,EAFA;AAGA,qBAAA,EAHA;AAIA,kBAAA;AAAA,eAAA;AAAA,OAJA;AAKA,eAAA;AACA,iBAAA,KADA;AAEA,0BAAA,KAFA;AAGA,0BAAA,KAHA;AAIA,wBAAA,KAJA;AAKA,qBAAA,IALA;AAMA,uBAAA,KANA;AAOA,oBAAA;AAPA,OALA;AAcA,gBAAA;AACA,gBAAA,EADA;AAEA,gBAAA;AAFA,OAdA;AAkBA,oBAAA;AACA,YAAA,IADA;AAEA,sBAAA,IAFA;AAGA,gBAAA,EAHA;AAIA,eAAA;AAJA;AAlBA,KAAA;AAyBA,GA3BA;AA4BA,WAAA;AACA,iBADA,2BACA;AAAA;;AACA,gBAAA,aAAA,GAAA,IAAA,CAAA,oBAAA;AACA,cAAA,UAAA,GAAA,SAAA,IAAA;AACA,OAFA;AAGA,KALA;AAMA,oBANA,8BAMA;AAAA;;AACA,eAAA,gBAAA,GAAA,IAAA,CAAA,oBAAA;AACA,eAAA,aAAA,GAAA,SAAA,IAAA;AAEA,OAHA;AAIA,KAXA;AAYA,YAZA,sBAYA;AAAA;;AACA;AACA,eAAA,QAAA,CAAA,YAAA,EACA,IADA,CACA,iBAAA;AACA,YAAA,KAAA,EAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,gBAAA,EAAA,IAAA,KAAA,MAAA,EAAA;AACA,qBAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA;;AACA,gBAAA,EAAA,IAAA,KAAA,OAAA,EAAA;AACA,qBAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA;AACA,WAPA;AAQA;AACA,OAZA;AAaA,KA3BA;AA4BA,iBA5BA,yBA4BA,OA5BA,EA4BA,MA5BA,EA4BA;AAAA;;AACA,eAAA,SAAA,CAAA,OAAA,EAAA,MAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,OAAA,OAAA,YAAA;AACA,aAAA,MAAA,GAAA,OAAA,IAAA;AACA,aAAA,KAAA,GAAA,EAAA,KAAA,CAAA,OAAA,YAAA,CAAA,MAAA,EAAA,UAAA,KAAA,EAAA;AACA,iBAAA,YAAA,MAAA,IAAA,CAAA,KAAA,CAAA;AACA,SAFA,CAAA;AAIA,eAAA,YAAA,GAAA,IAAA;AACA,OARA;AASA,KAtCA;AAuCA,gBAvCA,wBAuCA,KAvCA,EAuCA,OAvCA,EAuCA;AACA,aAAA,EAAA,KAAA,CAAA,KAAA,EAAA,OAAA,CAAA;AACA,KAzCA;AA0CA,cA1CA,wBA0CA;AAAA;;AACA,eAAA,WAAA,CAAA,KAAA,UAAA,CAAA,KAAA,EAAA,IAAA,CAAA,oBAAA;AACA;AACA,eAAA,aAAA,CAAA,IAAA,CAAA,SAAA,IAAA,EAFA,CAIA;;;AACA,eAAA,aAAA,GAAA,EAAA,OAAA,CAAA,OAAA,aAAA,EAAA,CAAA,cAAA,CAAA,CAAA;;AAEA,YAAA,SAAA,MAAA,KAAA,GAAA,EAAA;AACA;AACA,YAAA,MAAA,CAAA,OAAA,UAAA,EAAA,UAAA,YAAA,EAAA;AACA,mBAAA,aAAA,YAAA,KAAA,OAAA,UAAA,CAAA,KAAA;AACA,WAFA;;AAGA,eAAA,8BAAA,EAAA,GAAA,EAAA,SAAA;AACA,iBAAA,KAAA;AACA;;AAEA,YAAA,SAAA,MAAA,KAAA,GAAA,EAAA;AACA,eAAA,SAAA,IAAA,CAAA,KAAA,CAAA,OAAA,EAAA,GAAA,EAAA,OAAA;AACA,iBAAA,KAAA;AACA;;AAEA,aAAA,SAAA,IAAA,CAAA,KAAA,CAAA,OAAA,EAAA,GAAA,EAAA,OAAA;AACA,OAtBA;AAuBA,KAlEA;AAmEA,UAnEA,kBAmEA,OAnEA,EAmEA,MAnEA,EAmEA,YAnEA,EAmEA;AACA,UAAA,YAAA,SAAA,EAAA;AACA,aAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CADA,CAEA;;AACA,eAAA,QAAA,CAAA,CAAA,EAAA,SAAA,IAAA,CAAA,YAAA;AACA;AACA;;AAEA,UAAA,YAAA,kBAAA,IAAA,YAAA,kBAAA,EAAA;AACA,YAAA,YAAA,kBAAA,EAAA;AACA,eAAA,OAAA,CAAA,gBAAA,GAAA,IAAA;AACA,eAAA,OAAA,CAAA,gBAAA,GAAA,KAAA;AACA,SAHA,MAGA;AACA,eAAA,OAAA,CAAA,gBAAA,GAAA,IAAA;AACA,eAAA,OAAA,CAAA,gBAAA,GAAA,KAAA;AACA;;AACA;AACA;;AAEA,UAAA,YAAA,gBAAA,EAAA;AACA,aAAA,OAAA,CAAA,aAAA,GAAA,IAAA;AACA,aAAA,OAAA,CAAA,gBAAA,GAAA,IAAA;AACA,aAAA,OAAA,CAAA,cAAA,GAAA,IAAA;AACA,aAAA,OAAA,CAAA,WAAA,GAAA,KAAA;AACA,aAAA,YAAA,CAAA,EAAA,GAAA,MAAA;AACA,aAAA,YAAA,CAAA,YAAA,GAAA,YAAA;AACA,aAAA,OAAA,CAAA,aAAA,GAAA,IAAA;AACA;AACA;;AAEA,UAAA,YAAA,mBAAA,EAAA;AACA,aAAA,OAAA,CAAA,aAAA,GAAA,KAAA;AACA,aAAA,OAAA,CAAA,gBAAA,GAAA,KAAA;AACA,aAAA,OAAA,CAAA,cAAA,GAAA,KAAA;AACA,aAAA,OAAA,CAAA,WAAA,GAAA,IAAA;AACA,aAAA,OAAA,CAAA,aAAA,GAAA,KAAA;AACA,aAAA,OAAA,CAAA,UAAA,GAAA,KAAA;AACA;AACA;;AAEA,UAAA,YAAA,gBAAA,EAAA;AACA,aAAA,OAAA,CAAA,aAAA,GAAA,KAAA;AACA,aAAA,OAAA,CAAA,gBAAA,GAAA,KAAA;AACA,aAAA,OAAA,CAAA,cAAA,GAAA,KAAA;AACA,aAAA,OAAA,CAAA,WAAA,GAAA,KAAA;AACA,aAAA,YAAA,CAAA,EAAA,GAAA,MAAA;AACA,aAAA,YAAA,CAAA,YAAA,GAAA,YAAA;AACA,aAAA,OAAA,CAAA,aAAA,GAAA,KAAA;AACA,aAAA,OAAA,CAAA,UAAA,GAAA,IAAA;AACA,aAAA,aAAA,CAAA,EAAA,EAAA,MAAA;AACA;AACA,KAtHA;AAuHA,eAvHA,uBAuHA,MAvHA,EAuHA,QAvHA,EAuHA;AACA;AACA,eAAA,WAAA,CAAA,KAAA,YAAA,CAAA,EAAA,EAAA,MAAA,EAAA,IAAA,CAAA,oBAAA;AACA;AACA,YAAA,QAAA,EAAA;AACA,iBAAA,OAAA,CAAA,WAAA,oBAAA;AACA;AACA,OALA;AAMA,KA/HA;AAgIA,aAhIA,qBAgIA,MAhIA,EAgIA;AAAA;;AACA,eAAA,aAAA,CAAA,EAAA,EAAA,MAAA,EAAA,IAAA,CAAA,oBAAA;AACA;AACA;AACA;AACA,YAAA,SAAA,IAAA,CAAA,MAAA,EAAA;AACA,eAAA,SAAA,IAAA,CAAA,MAAA,CAAA,OAAA,EAAA;AACA,kBAAA,SADA;AAEA,qBAAA;AACA,sBAAA,IADA;AAEA,qBAAA;AACA,sBAAA,eADA;AAEA,uBAAA;AAFA;AAFA;AAFA,WAAA,EASA,IATA,CASA,UAAA,KAAA,EAAA;AACA,oBAAA,KAAA;AACA,mBAAA,QAAA;AACA,yBAAA,aAAA,CAAA,CAAA,uBAAA,CAAA,EAAA,MAAA,EAAA,IAAA,CAAA,oBAAA;AACA;AACA,uBAAA,aAAA,EAAA,8FAAA,EAAA,SAAA;AACA,iBAHA,EAGA,KAHA,CAGA,iBAAA;AACA,0BAAA,GAAA,CAAA,KAAA;AACA,iBALA;;AAMA,uBAAA,mBAAA,CAAA,MAAA;;AACA;AATA;AAWA,WArBA;AAuBA;AACA;;AAEA,eAAA,mBAAA,CAAA,MAAA;;AACA,aAAA,mCAAA,EAAA,EAAA,EAAA,SAAA;AAEA,OAlCA;AAmCA,KApKA;AAqKA,uBArKA,+BAqKA,MArKA,EAqKA;AACA,UAAA,QAAA,KAAA,aAAA,CAAA,KAAA,EAAA;;AACA,QAAA,MAAA,CAAA,KAAA,EAAA,UAAA,IAAA,EAAA;AACA,eAAA,KAAA,EAAA,KAAA,UAAA,MAAA,CAAA;AACA,OAFA;;AAIA,WAAA,aAAA,GAAA,KAAA;AACA;AA5KA,GA5BA;AA0MA,SA1MA,qBA0MA;AAEA,SAAA,QAAA;AACA,SAAA,gBAAA;AACA,SAAA,aAAA;AACA,SAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA;AAEA;AAjNA,CAAA","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <md-button class=\"md-just-icon md-round md-success add-meal\" @click='toggle(\"addMeal\", null, null)'><md-icon >add</md-icon></md-button>\n      <div class=\"md-layout-item\">\n        <md-button class=\"md-default\" @click=\"toggle('backToActiveMeals', null, null)\" v-show=\"!toggles.activeMeals\"><md-icon >keyboard_arrow_left</md-icon></md-button>\n        <div v-if=\"toggles.activeMeals\">\n          <h3>ACTIVE MEALS</h3>\n          <div class=\"row\" v-for=\"meals in groupedItems(myActiveMeals, 4)\" :key=\"meals.id\">\n            <div class=\"col-md-3\" v-for=\"meal in meals\" :key=\"meal.id\">\n              <md-card>\n                <md-card-header data-background-color=\"green\">\n                  <h4 class=\"title\">Table {{ meal.table_number }}</h4>\n                </md-card-header>\n                <md-card-content>\n                  <md-button class=\"md-info md-block\" @click=\"toggle('chooseItemType', meal.id, meal.table_number)\">ADD ITEM</md-button>\n                  <md-button class=\"md-info md-block\" @click=\"toggle('viewOrdersMeal', meal.id, meal.table_number)\">DETAILS</md-button>\n                  <md-button class=\"md-danger md-block\" @click=\"closeMeal(meal.id)\">CLOSE MEAL</md-button>\n                </md-card-content>\n              </md-card>\n            </div>\n          </div>\n        </div>\n\n        <div v-if=\"toggles.addItemToMeal\">\n          <h4>Adding dishes do table {{ this.mealSelected.table_number }}</h4>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <md-button class=\"md-info md-block\" @click=\"toggle('insertItemDishes', null, null)\">DISHES</md-button>\n            </div>\n            <div class=\"col-md-6\">\n              <md-button class=\"md-info md-block\" @click=\"toggle('insertItemDrinks', null, null)\">DRINKS</md-button>\n            </div>\n          </div>\n          <!-- ADD DISH TO MEAL SECTION -->\n          <div v-if=\"toggles.insertItemDrinks\">\n            <div class=\"row\" v-for=\"items in groupedItems(allItems.drinks, 3)\" :key=\"items.id\">\n              <div class=\"col-md-4\" v-for=\"item in items\" :key=\"item.id\">\n                <div class=\"table text-center text-white p-4 rounded\">\n                  <div class=\"item-choose text-center rounded\" @click=\"createOrder(item.id, item.name)\">{{ item.name }}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div v-if=\"toggles.insertItemDishes\">\n            <div class=\"row\" v-for=\"items in groupedItems(allItems.dishes, 3)\" :key=\"items.id\">\n              <div class=\"col-md-4\" v-for=\"item in items\" md=\"4\" :key=\"item.id\">\n                <div class=\"table text-center text-white p-4 rounded\">\n                  <div class=\"item-choose text-center rounded\" @click=\"createOrder(item.id, item.name)\">{{ item.name }}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- ADD MEAL SECTION -->\n        <div v-if=\"toggles.addMeal\">\n          <h3>ADD MEAL</h3>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label for=\"table_number\" class=\"grey-text\">Table</label>\n              <select id=\"table_number\" class=\"form-control\" v-model=\"createMeal.table\">\n                <option v-for=\"table in freeTables\" :value=\"table.table_number\" :key=\"table.id\">{{ table.table_number }}</option>\n              </select>\n              <md-button class=\"md-info md-block\" @click=\"insertMeal\">ADD MEAL</md-button>\n            </div>\n          </div>\n        </div>\n\n        <!-- MEAL DETAILS -->\n        <div v-if=\"toggles.mealOrders\">\n          <h4>MEAL DETAILS</h4>\n          <h4>TABLE {{ mealSelected.table_number }} @ {{ mealSelected.total }}€</h4>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <md-card>\n                <md-card-header data-background-color=\"green\">\n                  <h4 class=\"title\">Orders</h4>\n                </md-card-header>\n                <md-card-content>\n                  <table class=\"table\">\n                    <thead>\n                    <tr>\n                      <th>Item</th>\n                      <th>Price</th>\n                      <th>Time</th>\n                      <th><md-icon>border_color</md-icon></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr v-for=\"order in mealSelected.orders\" :key=\"order.id\">\n                      <td class=\"pt-4\">{{ order.item.name }}</td>\n                      <td class=\"pt-4\">{{ order.item.price }}€</td>\n                      <td class=\"pt-4\">{{ order.created_at }}</td>\n                      <td><md-button class=\"m-0\">DELIVERED</md-button></td>\n                    </tr>\n                    </tbody>\n                  </table>\n                </md-card-content>\n              </md-card>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n\nimport TablesAPI from \"../../packages/api/Tables.js\";\nimport MealsAPI from \"../../packages/api/Meals.js\";\nimport ItemsAPI from \"../../packages/api/Items.js\";\nimport OrderAPI from \"../../packages/api/Orders.js\";\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport swal from \"sweetalert\";\n\n\nexport default {\n  data() {\n    return {\n      user: [],\n      freeTables: [],\n      myActiveMeals: [],\n      createMeal: { table: 0 },\n      toggles:{\n        addMeal: false,\n        insertItemDishes: false,\n        insertItemDrinks: false,\n        chooseItemType: false,\n        activeMeals: true,\n        addItemToMeal: false,\n        mealOrders: false\n      },\n      allItems: {\n        drinks: [],\n        dishes: []\n      },\n      mealSelected: {\n        id: null,\n        table_number: null,\n        orders: [],\n        total: 0\n      },\n    };\n  },\n  methods: {\n    getFreeTables(){\n      TablesAPI.getFreeTables().then(response => {\n        this.freeTables = response.data;\n      });\n    },\n    getMyActiveMeals(){\n      MealsAPI.getMyActiveMeals().then(response => {\n        this.myActiveMeals = response.data;\n\n      });\n    },\n    getItems(){\n      // No need to paginate the results here\n      ItemsAPI.getItems('/api/items')\n        .then(items => {\n          if (items){\n            items.data.forEach((e, i) => {\n              if (e.type === 'dish'){\n                this.allItems.dishes.push(e);\n              }\n              if (e.type === 'drink'){\n                this.allItems.drinks.push(e);\n              }\n            });\n          }\n        });\n    },\n    getMealOrders(filters, mealID){\n      MealsAPI.getOrders(filters, mealID).then((orders) => {\n        const meal = this.mealSelected;\n        meal.orders = orders.data;\n        meal.total = _.sumBy(this.mealSelected.orders, (order) => {\n          return parseFloat(order.item.price);\n        });\n\n        this.mealSelected = meal;\n      });\n    },\n    groupedItems(items, columns){\n      return _.chunk(items, columns);\n    },\n    insertMeal(){\n      MealsAPI.postNewMeal(this.createMeal.table).then(response => {\n        // We need to add the table to the array of tables\n        this.myActiveMeals.push(response.data);\n\n        // Re-order the myactive meals\n        this.myActiveMeals = _.orderBy(this.myActiveMeals, ['table_number']);\n\n        if (response.status === 201){\n          // Remove from the array of free tables the one we just added\n          _.remove(this.freeTables, (currentTable) => {\n            return currentTable.table_number === this.createMeal.table;\n          });\n          swal('Meal registered with success', ' ', 'success');\n          return false;\n        }\n\n        if (response.status === 403){\n          swal(response.data.error.message, ' ', 'error');\n          return false;\n        }\n\n        swal(response.data.error.message, ' ', 'error');\n      })\n    },\n    toggle(section, mealID, table_number){\n      if(section === \"addMeal\"){\n        this.toggles.addMeal = true;\n        // Scroll to the bottom of the page in case there are several tables\n        window.scrollTo(0,document.body.scrollHeight);\n        return;\n      }\n\n      if(section === \"insertItemDishes\" || section === \"insertItemDrinks\"){\n        if(section === \"insertItemDishes\"){\n          this.toggles.insertItemDishes = true;\n          this.toggles.insertItemDrinks = false;\n        }else{\n          this.toggles.insertItemDrinks = true;\n          this.toggles.insertItemDishes = false;\n        }\n        return;\n      }\n\n      if(section === \"chooseItemType\"){\n        this.toggles.addItemToMeal = true;\n        this.toggles.insertItemDishes = true;\n        this.toggles.chooseItemType = true;\n        this.toggles.activeMeals = false;\n        this.mealSelected.id = mealID;\n        this.mealSelected.table_number = table_number;\n        this.toggles.addItemToMeal = true;\n        return;\n      }\n\n      if(section === \"backToActiveMeals\"){\n        this.toggles.addItemToMeal = false;\n        this.toggles.insertItemDishes = false;\n        this.toggles.chooseItemType = false;\n        this.toggles.activeMeals = true;\n        this.toggles.addItemToMeal = false;\n        this.toggles.mealOrders = false;\n        return;\n      }\n\n      if(section === \"viewOrdersMeal\"){\n        this.toggles.addItemToMeal = false;\n        this.toggles.insertItemDishes = false;\n        this.toggles.chooseItemType = false;\n        this.toggles.activeMeals = false;\n        this.mealSelected.id = mealID;\n        this.mealSelected.table_number = table_number;\n        this.toggles.addItemToMeal = false;\n        this.toggles.mealOrders = true;\n        this.getMealOrders([], mealID);\n      }\n    },\n    createOrder(itemID, itemName){\n      // TODO ME NEEDS TO WAIT 5 SECONDS AND BE ABLE TO CANCEL ORDER\n      OrderAPI.createOrder(this.mealSelected.id, itemID).then(response => {\n        // Check if there is an error\n        if (response){\n          toastr.success(itemName + ' added succesfully');\n        }\n      });\n    },\n    closeMeal(mealID){\n      MealsAPI.postCloseMeal([], mealID).then(response => {\n        // The error will represent that this meal has an order that wasn't delivered.\n        // This will prompt the system to ask the waiter if she/he would like\n        // to close the meal anyway and the meals not be considered.\n        if(response.data.errors){\n          swal(response.data.errors.message, {\n            icon: \"warning\",\n            buttons: {\n              cancel: \"No\",\n              catch: {\n                text: \"Delete dishes\",\n                value: \"delete\"\n              },\n            },\n          }).then((value) => {\n            switch (value) {\n              case \"delete\":\n                MealsAPI.postCloseMeal(['eliminateNotDelivered'], mealID).then(response => {\n                  // console.log(response);\n                  swal(\"Meal closed\", \"Your meal has been closed and all products different than 'delivered' set to 'not delivered'\", \"success\");\n                }).catch(error => {\n                  console.log(error);\n                });\n                this.removeMealFromArray(mealID);\n                break;\n            }\n          });\n\n          return;\n        }\n\n        this.removeMealFromArray(mealID);\n        swal(\"Meal has been closed successfully\", \"\", \"success\");\n\n      });\n    },\n    removeMealFromArray(mealID){\n      var meals = this.myActiveMeals.slice();\n      _.remove(meals, (meal) => {\n        return meal.id === parseInt(mealID);\n      });\n\n      this.myActiveMeals = meals;\n    }\n  },\n  created(){\n\n    this.getItems();\n    this.getMyActiveMeals();\n    this.getFreeTables();\n    this.user = this.$store.state.user;\n\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped> \n  .add-meal{\n    position: fixed !important; bottom: 10px; right: 10px; z-index: 9999;\n  }\n\n  .item-choose{\n    padding: 10px; background: linear-gradient(60deg, #66bb6a, #43a047); color: white;\n    cursor: pointer;\n  }\n</style>\n"],"sourceRoot":"src/pages/Dashboard"}]}