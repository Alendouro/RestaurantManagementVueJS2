{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/eslint-loader/index.js??ref--13-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Users.js","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Users.js","mtime":1546624201014},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport axios from \"axios\";\nimport toastr from \"toastr\";\nexport default {\n  getUsers: function getUsers(filters) {\n    var trashed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    // If it has filter we need to construct the parameters\n    var parameters = \"\";\n    filters.forEach(function (e, i) {\n      if (i === 0) {\n        // If it is the first parameter then we need to insert '?'\n        parameters += \"?filters[]=\" + e;\n      } else {\n        // otherwise just insert the & symbol\n        parameters += \"&filters[]=\" + e;\n      }\n    }); // We can do some logic that concern only the API and then return promise\n\n    return axios({\n      method: \"GET\",\n      url: \"/api/users\" + (parameters === \"\" ? \"\" : \"/\" + parameters) + (trashed ? parameters === \"\" ? \"?trashed\" : \"&trashed\" : \"\")\n    }).then(function (response) {\n      return response;\n    }).catch(function (error) {\n      if (error) {\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    });\n  },\n  getSearchUser: function getSearchUser(name) {\n    // We can do some logic that concern only the API and then return promise\n    return axios({\n      method: \"GET\",\n      url: \"/api/users/search?name=\" + name\n    }).then(function (response) {\n      return response;\n    }).catch(function (error) {\n      if (error) {\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    });\n  },\n  updateUser: function updateUser(user) {\n    return axios({\n      method: \"PUT\",\n      url: \"/api/users/\" + user.id,\n      data: user\n    }).then(function (r) {\n      return r;\n    }).catch(function (err) {\n      var statusCode = err.response.status;\n\n      if (statusCode === 422) {\n        toastr.error(err.response.data.error.message, \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 500) {\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    });\n  },\n  deleteUser: function deleteUser(user, forever) {\n    return axios({\n      method: \"DELETE\",\n      url: \"/api/users/\" + user.id + (forever ? \"?forever\" : \"\")\n    }).then(function (r) {\n      return r;\n    }).catch(function (err) {\n      var statusCode = err.response.status;\n\n      if (statusCode === 403) {\n        toastr.error(err.response.data.error.message, \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 500) {\n        toastr.error(\"There was an internal error\", \"ERROR\");\n      }\n    });\n  },\n  // --------- STATS ROUTES\n  getUserPerformance: function getUserPerformance(user) {\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/users/\" + user.id + \"/performance\"\n    }).then(function (r) {\n      return r;\n    }).catch(function (err) {\n      var statusCode = err.response.status;\n\n      if (statusCode === 404) {\n        toastr.error(\"User was not found\", \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 403) {\n        toastr.error(err.response.data.error.message, \"ERROR\");\n        return false;\n      }\n\n      if (statusCode === 500) {\n        toastr.error(\"There was an internal error\", \"ERROR\");\n      }\n    });\n  },\n  // Start and End Shift\n  startShift: function startShift(id) {\n    axios.put('/api/user/startShift/' + id).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      if (error) {\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    });\n  }\n};",{"version":3,"sources":["/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/packages/api/Users.js"],"names":["axios","toastr","getUsers","filters","trashed","parameters","forEach","e","i","method","url","then","response","catch","error","getSearchUser","name","updateUser","user","id","data","r","statusCode","err","status","message","deleteUser","forever","getUserPerformance","startShift","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport toastr from \"toastr\";\n\nexport default {\n  getUsers(filters, trashed = false){\n    // If it has filter we need to construct the parameters\n    let parameters = \"\";\n    filters.forEach((e, i) => {\n      if (i === 0) {\n        // If it is the first parameter then we need to insert '?'\n        parameters += \"?filters[]=\" + e;\n      } else {\n        // otherwise just insert the & symbol\n        parameters += \"&filters[]=\" + e;\n      }\n    });\n\n    // We can do some logic that concern only the API and then return promise\n    return axios({\n      method: \"GET\",\n      url: \"/api/users\" + (parameters === \"\" ? \"\" : \"/\" + parameters) + (trashed ? (parameters === \"\" ? \"?trashed\" : \"&trashed\") : \"\")\n    })\n      .then(response => {\n        return response;\n      })\n      .catch(error => {\n        if (error) {\n          toastr.error(\"There was an internal error\");\n          return false;\n        }\n      });\n  },\n  getSearchUser(name){\n    // We can do some logic that concern only the API and then return promise\n    return axios({\n      method: \"GET\",\n      url: \"/api/users/search?name=\" + name\n    })\n      .then(response => {\n        return response;\n      })\n      .catch(error => {\n        if (error) {\n          toastr.error(\"There was an internal error\");\n          return false;\n        }\n      });\n  },\n  updateUser(user) {\n    return axios({\n      method: \"PUT\",\n      url: \"/api/users/\" + user.id,\n      data: user\n    })\n      .then(r => {\n        return r;\n      })\n      .catch(err => {\n        let statusCode = err.response.status;\n        if (statusCode === 422) {\n          toastr.error(err.response.data.error.message, \"ERROR\");\n          return false;\n        }\n        if (statusCode === 500) {\n          toastr.error(\"There was an internal error\");\n          return false;\n        }\n      });\n  },\n  deleteUser(user, forever) {\n    return axios({\n      method: \"DELETE\",\n      url: \"/api/users/\" + user.id + (forever ? \"?forever\" : \"\")\n    })\n      .then(r => {\n        return r;\n      })\n      .catch(err => {\n        let statusCode = err.response.status;\n        if (statusCode === 403) {\n          toastr.error(err.response.data.error.message, \"ERROR\");\n          return false;\n        }\n        if (statusCode === 500) {\n          toastr.error(\"There was an internal error\", \"ERROR\");\n        }\n      });\n  },\n  // --------- STATS ROUTES\n  getUserPerformance(user){\n    return axios({\n      method: \"GET\",\n      url: \"/api/statistics/users/\" + user.id + \"/performance\"\n    })\n      .then(r => {\n        return r;\n      })\n      .catch(err => {\n        let statusCode = err.response.status;\n        if (statusCode === 404) {\n          toastr.error(\"User was not found\", \"ERROR\");\n          return false;\n        }\n        if (statusCode === 403) {\n          toastr.error(err.response.data.error.message, \"ERROR\");\n          return false;\n        }\n        if (statusCode === 500) {\n          toastr.error(\"There was an internal error\", \"ERROR\");\n        }\n      });\n  },\n  // Start and End Shift\n  startShift(id){\n    axios.put('/api/user/startShift/' + id)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      if (error){\n        toastr.error(\"There was an internal error\");\n        return false;\n      }\n    })\n  }\n\n}"]}]}