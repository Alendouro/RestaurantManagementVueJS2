{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Dashboard/DashboardCashier.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Dashboard/DashboardCashier.vue","mtime":1546620709653},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.match\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TablesAPI from \"../../packages/api/Tables.js\";\nimport MealsAPI from \"../../packages/api/Meals.js\";\nimport ItemsAPI from \"../../packages/api/Items.js\";\nimport OrderAPI from \"../../packages/api/Orders.js\";\nimport InvoiceAPI from \"../../packages/api/Invoice.js\";\nimport InvoiceItemsAPI from \"../../packages/api/InvoiceItems.js\";\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport swal from \"sweetalert\";\nexport default {\n  data: function data() {\n    return {\n      toggles: {\n        invoices: true,\n        invoiceDetail: false\n      },\n      invoices: {\n        pending: [],\n        paid: [],\n        notPaid: []\n      },\n      invoiceSelectedDetails: {\n        invoice: null,\n        orders: [],\n        paymentDetail: {\n          name: \"\",\n          nif: \"\"\n        }\n      }\n    };\n  },\n  methods: {\n    getInvoice: function getInvoice() {\n      var _this = this;\n\n      InvoiceAPI.getInvoices(['pending'], false, true, true).then(function (invoices) {\n        _this.invoices.pending = invoices.data;\n      });\n    },\n    groupedItems: function groupedItems(items, columns) {\n      return _.chunk(items, columns);\n    },\n    getInvoiceItems: function getInvoiceItems(invoiceID) {\n      var _this2 = this;\n\n      InvoiceItemsAPI.getInvoiceItems(invoiceID).then(function (items) {\n        _this2.invoiceSelectedDetails.orders = items.data;\n      });\n    },\n    toggle: function toggle(section, invoice) {\n      this.hideAllSections(false);\n\n      if (section === \"invoiceDetails\") {\n        this.toggles.invoiceDetail = true;\n        this.invoiceSelectedDetails.invoice = invoice;\n        this.getInvoiceItems(invoice.id);\n        return;\n      }\n\n      if (section === 'invoices') {\n        this.toggles.invoices = true;\n      }\n    },\n    updateMakePayment: function updateMakePayment() {\n      var _this3 = this;\n\n      var pattern = /^\\d{9}$/;\n\n      if (!this.invoiceSelectedDetails.paymentDetail.nif.match(pattern)) {\n        toastr.error('NIF is invalid', 'Error');\n        return false;\n      }\n\n      if (this.invoiceSelectedDetails.paymentDetail.name === \"\") {\n        toastr.error('Name is mandatory', 'Error');\n        return false;\n      }\n\n      InvoiceAPI.updateInvoice({\n        name: this.invoiceSelectedDetails.paymentDetail.name,\n        nif: this.invoiceSelectedDetails.paymentDetail.nif\n      }, this.invoiceSelectedDetails.invoice.id).then(function (response) {\n        if (response.status === 400) {\n          swal(response.error.message, ' ', 'error', {\n            buttons: false\n          });\n          return;\n        }\n\n        if (response.status === 200) {\n          swal('Payment made successffully', ' ', 'success', {\n            buttons: false\n          });\n        } // Remove this invoice from the array\n\n\n        var invPending = _this3.invoices.pending;\n\n        _.remove(invPending, function (inv) {\n          return inv.id === _this3.invoiceSelectedDetails.invoice.id;\n        });\n\n        _this3.invoices.pending = invPending; // Show all the invoices\n\n        _this3.hideAllSections(false);\n\n        _this3.toggles.invoices = true; // Reset name and nif fields\n\n        _this3.invoiceSelectedDetails.paymentDetail.name = \"\";\n        _this3.invoiceSelectedDetails.paymentDetail.nif = \"\";\n      });\n    },\n    // -----------------   Auxiliary methods\n    hideAllSections: function hideAllSections(show) {\n      for (var key in this.toggles) {\n        if (this.toggles.hasOwnProperty(key)) {\n          this.toggles[key] = !!show; // either show or hide the sections\n        }\n      }\n    }\n  },\n  created: function created() {\n    this.getInvoice();\n  }\n};",{"version":3,"sources":["DashboardCashier.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA,OAAA,SAAA,MAAA,8BAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,QAAA,MAAA,8BAAA;AACA,OAAA,UAAA,MAAA,+BAAA;AACA,OAAA,eAAA,MAAA,oCAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,OAAA,IAAA,MAAA,YAAA;AAGA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,eAAA;AACA,kBAAA,IADA;AAEA,uBAAA;AAFA,OADA;AAKA,gBAAA;AACA,iBAAA,EADA;AAEA,cAAA,EAFA;AAGA,iBAAA;AAHA,OALA;AAUA,8BAAA;AACA,iBAAA,IADA;AAEA,gBAAA,EAFA;AAGA,uBAAA;AACA,gBAAA,EADA;AAEA,eAAA;AAFA;AAHA;AAVA,KAAA;AAmBA,GArBA;AAsBA,WAAA;AACA,cADA,wBACA;AAAA;;AACA,iBAAA,WAAA,CAAA,CAAA,SAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA,oBAAA;AACA,cAAA,QAAA,CAAA,OAAA,GAAA,SAAA,IAAA;AACA,OAFA;AAGA,KALA;AAMA,gBANA,wBAMA,KANA,EAMA,OANA,EAMA;AACA,aAAA,EAAA,KAAA,CAAA,KAAA,EAAA,OAAA,CAAA;AACA,KARA;AASA,mBATA,2BASA,SATA,EASA;AAAA;;AACA,sBAAA,eAAA,CAAA,SAAA,EAAA,IAAA,CAAA,iBAAA;AACA,eAAA,sBAAA,CAAA,MAAA,GAAA,MAAA,IAAA;AACA,OAFA;AAGA,KAbA;AAcA,UAdA,kBAcA,OAdA,EAcA,OAdA,EAcA;AACA,WAAA,eAAA,CAAA,KAAA;;AAEA,UAAA,YAAA,gBAAA,EAAA;AACA,aAAA,OAAA,CAAA,aAAA,GAAA,IAAA;AACA,aAAA,sBAAA,CAAA,OAAA,GAAA,OAAA;AACA,aAAA,eAAA,CAAA,QAAA,EAAA;AACA;AACA;;AAEA,UAAA,YAAA,UAAA,EAAA;AACA,aAAA,OAAA,CAAA,QAAA,GAAA,IAAA;AACA;AACA,KA3BA;AA4BA,qBA5BA,+BA4BA;AAAA;;AACA,UAAA,UAAA,SAAA;;AACA,UAAA,CAAA,KAAA,sBAAA,CAAA,aAAA,CAAA,GAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA,gBAAA,EAAA,OAAA;AACA,eAAA,KAAA;AACA;;AAEA,UAAA,KAAA,sBAAA,CAAA,aAAA,CAAA,IAAA,KAAA,EAAA,EAAA;AACA,eAAA,KAAA,CAAA,mBAAA,EAAA,OAAA;AACA,eAAA,KAAA;AACA;;AAEA,iBAAA,aAAA,CAAA;AACA,cAAA,KAAA,sBAAA,CAAA,aAAA,CAAA,IADA;AAEA,aAAA,KAAA,sBAAA,CAAA,aAAA,CAAA;AAFA,OAAA,EAGA,KAAA,sBAAA,CAAA,OAAA,CAAA,EAHA,EAGA,IAHA,CAGA,oBAAA;AACA,YAAA,SAAA,MAAA,KAAA,GAAA,EAAA;AACA,eAAA,SAAA,KAAA,CAAA,OAAA,EAAA,GAAA,EAAA,OAAA,EAAA;AACA,qBAAA;AADA,WAAA;AAGA;AACA;;AAEA,YAAA,SAAA,MAAA,KAAA,GAAA,EAAA;AACA,eAAA,4BAAA,EAAA,GAAA,EAAA,SAAA,EAAA;AACA,qBAAA;AADA,WAAA;AAGA,SAZA,CAcA;;;AACA,YAAA,aAAA,OAAA,QAAA,CAAA,OAAA;;AAEA,UAAA,MAAA,CAAA,UAAA,EAAA,UAAA,GAAA,EAAA;AACA,iBAAA,IAAA,EAAA,KAAA,OAAA,sBAAA,CAAA,OAAA,CAAA,EAAA;AACA,SAFA;;AAIA,eAAA,QAAA,CAAA,OAAA,GAAA,UAAA,CArBA,CAuBA;;AACA,eAAA,eAAA,CAAA,KAAA;;AACA,eAAA,OAAA,CAAA,QAAA,GAAA,IAAA,CAzBA,CA2BA;;AACA,eAAA,sBAAA,CAAA,aAAA,CAAA,IAAA,GAAA,EAAA;AACA,eAAA,sBAAA,CAAA,aAAA,CAAA,GAAA,GAAA,EAAA;AACA,OAjCA;AAkCA,KA1EA;AA4EA;AACA,mBA7EA,2BA6EA,IA7EA,EA6EA;AACA,WAAA,IAAA,GAAA,IAAA,KAAA,OAAA,EAAA;AACA,YAAA,KAAA,OAAA,CAAA,cAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,OAAA,CAAA,GAAA,IAAA,CAAA,CAAA,IAAA,CADA,CACA;AACA;AACA;AACA;AAnFA,GAtBA;AA2GA,SA3GA,qBA2GA;AACA,SAAA,UAAA;AACA;AA7GA,CAAA","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item\">\n        <md-button class=\"md-default\" v-show=\"!toggles.invoices\" @click=\"toggle('invoices', null)\"><md-icon >keyboard_arrow_left</md-icon></md-button>\n        <!-- INVOICE LIST -->\n        <div v-if=\"toggles.invoices\">\n          <h3>INVOICES</h3>\n          <div class=\"row\" v-for=\"invoices in groupedItems(this.invoices.pending, 4)\" :key=\"invoices.id\">\n            <div class=\"col-md-3\" v-for=\"invoice in invoices\" :key=\"invoice.id\">\n              <md-card>\n                <md-card-header data-background-color=\"green\">\n                  <h4 class=\"title\">Table {{ invoice.meal.table_number }}</h4>\n                </md-card-header>\n                <md-card-content>\n                  <md-button class=\"md-info md-block\" @click=\"toggle('invoiceDetails', invoice)\">DETAILS</md-button>\n                </md-card-content>\n              </md-card>\n            </div>\n          </div>\n          <h1 class=\"text-center\" v-show=\"invoices.pending.length === 0\">NO INVOICES</h1>\n\n        </div>\n\n        <!-- INVOICE DETAILS -->\n        <div v-if=\"toggles.invoiceDetail\">\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <h4><md-icon >insert_drive_file</md-icon>INVOICE DETAILS</h4>\n              <h4><md-icon >fastfood</md-icon> {{ invoiceSelectedDetails.invoice.meal.table_number }}</h4>\n              <h4><md-icon >person_pin</md-icon> {{ invoiceSelectedDetails.invoice.meal.waiter.name}}</h4>\n              <hr>\n              <h4>{{ this.invoiceSelectedDetails.paymentDetail.name}}</h4>\n              <h4>{{ this.invoiceSelectedDetails.paymentDetail.nif }}</h4>\n            </div>\n            <div class=\"col-md-8\">\n              <md-field>\n                <label>Name</label>\n                <md-input v-model=\"invoiceSelectedDetails.paymentDetail.name\"></md-input>\n              </md-field>\n              <md-field>\n                <label>NIF</label>\n                <md-input v-model=\"invoiceSelectedDetails.paymentDetail.nif\"></md-input>\n              </md-field>\n              <md-button class=\"md-info md-block\" @click=\"updateMakePayment()\">PAY</md-button>\n\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <md-card>\n                <md-card-header data-background-color=\"green\">\n                  <h4 class=\"title\">Orders</h4>\n                  <p class=\"category\">TOTAL: {{ invoiceSelectedDetails.invoice.total_price }}€</p>\n                </md-card-header>\n                <md-card-content>\n                  <table class=\"table\">\n                    <thead>\n                    <tr>\n                      <th>Item</th>\n                      <th>Quantity</th>\n                      <th>Unit price</th>\n                      <th>Sub price</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr v-for=\"order in invoiceSelectedDetails.orders\" :key=\"order.id\">\n                      <td class=\"pt-4\">{{ order.item.name }}</td>\n                      <td class=\"pt-4\">{{ order.quantity }}</td>\n                      <td class=\"pt-4\">{{ order.unit_price }}€</td>\n                      <td class=\"pt-4\">{{ order.sub_total_price }}€</td>\n                    </tr>\n                    </tbody>\n                  </table>\n                </md-card-content>\n              </md-card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n\nimport TablesAPI from \"../../packages/api/Tables.js\";\nimport MealsAPI from \"../../packages/api/Meals.js\";\nimport ItemsAPI from \"../../packages/api/Items.js\";\nimport OrderAPI from \"../../packages/api/Orders.js\";\nimport InvoiceAPI from \"../../packages/api/Invoice.js\";\nimport InvoiceItemsAPI from \"../../packages/api/InvoiceItems.js\";\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport swal from \"sweetalert\";\n\n\nexport default {\n  data() {\n    return {\n      toggles: {\n        invoices: true,\n        invoiceDetail: false\n      },\n      invoices: {\n        pending: [],\n        paid: [],\n        notPaid: []\n      },\n      invoiceSelectedDetails: {\n        invoice: null,\n        orders: [],\n        paymentDetail: {\n          name: \"\",\n          nif: \"\"\n        }\n      }\n    };\n  },\n  methods: {\n    getInvoice(){\n      InvoiceAPI.getInvoices(['pending'], false, true, true).then(invoices => {\n        this.invoices.pending = invoices.data;\n      });\n    },\n    groupedItems(items, columns){\n      return _.chunk(items, columns);\n    },\n    getInvoiceItems(invoiceID){\n      InvoiceItemsAPI.getInvoiceItems(invoiceID).then(items => {\n        this.invoiceSelectedDetails.orders = items.data;\n      });\n    },\n    toggle(section, invoice){\n      this.hideAllSections(false);\n\n      if(section === \"invoiceDetails\"){\n        this.toggles.invoiceDetail = true;\n        this.invoiceSelectedDetails.invoice = invoice;\n        this.getInvoiceItems(invoice.id);\n        return;\n      }\n\n      if(section === 'invoices'){\n        this.toggles.invoices = true;\n      }\n    },\n    updateMakePayment(){\n      let pattern = /^\\d{9}$/;\n      if(!this.invoiceSelectedDetails.paymentDetail.nif.match(pattern)){\n          toastr.error('NIF is invalid', 'Error');\n          return false;\n      }\n\n      if(this.invoiceSelectedDetails.paymentDetail.name === \"\"){\n        toastr.error('Name is mandatory', 'Error');\n        return false;\n      }\n\n      InvoiceAPI.updateInvoice({\n        name: this.invoiceSelectedDetails.paymentDetail.name,\n        nif: this.invoiceSelectedDetails.paymentDetail.nif\n      }, this.invoiceSelectedDetails.invoice.id).then(response => {\n        if(response.status === 400){\n          swal(response.error.message, ' ', 'error', {\n            buttons: false,\n          });\n          return;\n        }\n\n        if(response.status === 200){\n          swal('Payment made successffully', ' ', 'success', {\n            buttons: false,\n          });\n        }\n\n        // Remove this invoice from the array\n        const invPending = this.invoices.pending;\n\n        _.remove(invPending, (inv) => {\n            return inv.id === this.invoiceSelectedDetails.invoice.id;\n        });\n\n        this.invoices.pending = invPending;\n\n        // Show all the invoices\n        this.hideAllSections(false);\n        this.toggles.invoices = true;\n\n        // Reset name and nif fields\n        this.invoiceSelectedDetails.paymentDetail.name = \"\";\n        this.invoiceSelectedDetails.paymentDetail.nif = \"\";\n      });\n    },\n\n    // -----------------   Auxiliary methods\n    hideAllSections(show){\n      for (let key in this.toggles) {\n        if (this.toggles.hasOwnProperty(key)) {\n          this.toggles[key] = (!!show); // either show or hide the sections\n        }\n      }\n    }\n  },\n  created(){\n    this.getInvoice();\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped> \n\n</style>\n"],"sourceRoot":"src/pages/Dashboard"}]}