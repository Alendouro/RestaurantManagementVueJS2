{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Manager/Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Manager/Menu.vue","mtime":1546433593311},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ItemsAPI from \"../../packages/api/Items.js\";\nimport { required, email } from 'vuelidate/lib/validators';\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport swal from \"sweetalert\";\nimport Toggles from '../../packages/toggles/toggles.js';\nimport URLFormatter from '../../packages/url/URLFormatter.js';\nexport default {\n  data: function data() {\n    return {\n      toggles: {\n        menu: false,\n        menuDishes: false,\n        menuDrinks: false,\n        menuAddItem: false\n      },\n      items: {\n        dishes: [],\n        drinks: [],\n        add: {\n          name: \"\",\n          type: \"\",\n          description: \"\",\n          price: \"\",\n          photo: \"\"\n        }\n      }\n    };\n  },\n  validations: {\n    items: {\n      add: {\n        name: {\n          required: required\n        },\n        type: {\n          required: required\n        },\n        description: {\n          required: required\n        },\n        price: {\n          required: required\n        },\n        photo: {\n          required: required\n        }\n      }\n    }\n  },\n  methods: {\n    toggle: function toggle(section) {\n      Toggles.hideAllSections(false, this.toggles);\n\n      if (section === \"menuDishes\") {\n        this.toggles.menu = true;\n        this.toggles.menuDishes = true;\n        return;\n      }\n\n      if (section === \"menuDrinks\") {\n        this.toggles.menu = true;\n        this.toggles.menuDrinks = true;\n        return;\n      }\n    },\n    getItems: function getItems() {\n      var _this = this;\n\n      ItemsAPI.getItems('api/items').then(function (items) {\n        items.data.forEach(function (e, i) {\n          if (e.type === \"dish\") {\n            _this.items.dishes.push(e);\n          } else if (e.type === 'drink') {\n            _this.items.drinks.push(e);\n          }\n        });\n      });\n    },\n    groupedItems: function groupedItems(items, columns) {\n      return _.chunk(items, columns);\n    },\n    onImageChange: function onImageChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n\n      if (!files.length) {\n        toastr.error('Error while uploading photo');\n        return;\n      }\n\n      this.createImage(files[0]);\n    },\n    imageItem: function imageItem(itemUrl) {\n      return URLFormatter.imageItem(itemUrl);\n    },\n    deleteItem: function deleteItem(itemID, itemType) {\n      var _this2 = this;\n\n      ItemsAPI.deleteItem(itemID).then(function (r) {\n        if (r.status !== 200) {\n          swal('Error deleting item', r.data.error.message, 'error');\n          return;\n        }\n\n        toastr.success('Item has been deleted successfully');\n        var items;\n\n        if (itemType === 'dish') {\n          items = _this2.items.dishes.slice();\n        } else if (itemType === 'drink') {\n          items = _this2.items.drinks.slice();\n        }\n\n        _.remove(items, function (item) {\n          return item.id === itemID;\n        });\n\n        if (itemType === 'dish') {\n          _this2.items.dishes = items;\n        } else if (itemType === 'drink') {\n          _this2.items.drinks = items;\n        }\n      });\n    },\n    createImage: function createImage(file) {\n      var _this3 = this;\n\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        _this3.items.add.photo = e.target.result;\n      };\n\n      reader.readAsDataURL(file);\n    },\n    postItem: function postItem() {\n      var _this4 = this;\n\n      // Make the validation before sending\n      ItemsAPI.postItem(this.items.add).then(function (item) {\n        if (item.status !== 200) {\n          toastr.error('There was an eror while processing your request');\n          return;\n        }\n\n        if (item.data.type === 'drink') {\n          var drinks = _this4.items.drinks.slice();\n\n          drinks.push(item.data);\n\n          _.orderBy(drinks, function (o) {\n            return o.name;\n          });\n\n          _this4.items.drinks = drinks;\n        } else if (item.data.type === 'dish') {\n          var dishes = _this4.items.dishes.slice();\n\n          dishes.push(item.data);\n\n          _.orderBy(dishes, ['name']);\n\n          _this4.items.dishes = dishes;\n        }\n\n        toastr.success(_this4.items.add.name + ' adicionado com sucesso'); // Clean item to add\n\n        _this4.items.add.name = \"\";\n        _this4.items.add.type = \"\";\n        _this4.items.add.description = \"\";\n        _this4.items.add.price = \"\";\n        _this4.items.add.photo = \"\";\n      });\n    }\n  },\n  created: function created() {\n    this.getItems();\n  }\n};",{"version":3,"sources":["Menu.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item\">\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <md-button class=\"md-info md-block\" @click=\"toggle('menuAddItem')\"><md-icon >add</md-icon></md-button>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <md-button class=\"md-success md-block\" @click=\"toggle('menuDishes')\">DISHES</md-button>\n          </div>\n          <div class=\"col-sm-6\">\n            <md-button class=\"md-success md-block\" @click=\"toggle('menuDrinks')\">DRINKS</md-button>\n          </div>\n        </div>\n        <div v-show=\"this.toggles.menuDishes\">\n          <div class=\"row\" v-for=\"dishes in groupedItems(this.items.dishes, 3)\" :key=\"dishes.id\">\n            <div class=\"col-md-4\" v-for=\"dish in dishes\" :key=\"dish.id\">\n              <md-card>\n                <md-card-header data-background-color=\"green\">\n                  <h4 class=\"title\">{{dish.name}}</h4>\n                  <h6>{{ dish.price }}€</h6>\n                </md-card-header>\n                <md-card-content>\n                  <!--<img text :src=\"imageItem(dish.photo_url)\" :alt=\"dish.name\">-->\n                  <img text src=\"https://cdn.images.express.co.uk/img/dynamic/14/590x/McDonald-s-burger-876121.jpg\" :alt=\"dish.name\">\n                  <br>\n                  <md-button class=\"m-0 md-danger md-block mt-1\" @click=\"deleteItem(dish.id, 'dish')\"><md-icon >delete_outline</md-icon></md-button>\n                </md-card-content>\n              </md-card>\n            </div>\n          </div>\n        </div>\n\n        <div v-show=\"this.toggles.menuDrinks\">\n          <div class=\"row\" v-for=\"drinks in groupedItems(this.items.drinks, 3)\" :key=\"drinks.id\">\n            <div class=\"col-md-4\" v-for=\"drink in drinks\" :key=\"drink.id\">\n              <md-card>\n                <md-card-header data-background-color=\"green\">\n                  <h4 class=\"title\">{{drink.name}}</h4>\n                  <h6>{{ drink.price }}€</h6>\n                </md-card-header>\n                <md-card-content>\n                  <!--<img text :src=\"imageItem(drink.photo_url)\" :alt=\"drink.name\">-->\n                  <img text src=\"https://cdn.images.express.co.uk/img/dynamic/14/590x/McDonald-s-burger-876121.jpg\" :alt=\"drink.name\">\n                  <md-button class=\"m-0 md-danger md-block mt-1\" @click=\"deleteItem(drink.id, 'drink')\"><md-icon >delete_outline</md-icon></md-button>\n                </md-card-content>\n              </md-card>\n            </div>\n          </div>\n        </div>\n\n        <form class=\"form\" @submit.prevent=\"postItem()\">\n          <div class=\"form-row\">\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"name\">Name</label>\n                <input type=\"text\" id=\"name\" class=\"form-control\"\n                       @input=\"$v.items.add.name.$touch()\"\n                       v-model.trim=\"items.add.name\">\n                <p class=\"error-message\" v-if=\"!$v.items.add.name.required\">Name must not be empty</p>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"type\">Type</label>\n                <select class=\"custom-select\" id=\"type\"\n                        @input=\"$v.items.add.type.$touch()\"\n                        v-model.trim=\"items.add.type\">\n                  <option value=\"drink\">Drink</option>\n                  <option value=\"dish\">Dish</option>\n                </select>\n                <p class=\"error-message\" v-if=\"!$v.items.add.type.required\">Type must not be empty</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"col-md-12\">\n              <label for=\"description\">Description</label>\n              <textarea id=\"description\" rows=\"8\" class=\"form-control\"\n                        @input=\"$v.items.add.description.$touch()\"\n                        v-model.trim=\"items.add.description\"></textarea>\n              <p class=\"error-message\" v-if=\"!$v.items.add.description.required\">Description must not be empty</p>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"col-md-6\">\n              <label for=\"price\">Price</label>\n              <input type=\"number\" id=\"price\" class=\"form-control\" v-model.trim=\"items.add.price\"/>\n              <p class=\"error-message\" v-if=\"!$v.items.add.price.required\">Price must not be empty</p>\n\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"photo\">Photo</label>\n                <input type=\"file\" class=\"form-control\" id=\"photo\"\n                       @input=\"$v.items.add.photo.$touch()\"\n                       v-on:change=\"onImageChange\">\n                <p class=\"error-message\" v-if=\"!$v.items.add.photo.required\">Photo must not be empty</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <md-button class=\"md-success md-block\" type=\"submit\" :disabled=\"$v.items.add.$invalid\">ADD ITEM</md-button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport ItemsAPI from \"../../packages/api/Items.js\";\nimport { required, email } from 'vuelidate/lib/validators'\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport swal from \"sweetalert\";\nimport Toggles from '../../packages/toggles/toggles.js'\nimport URLFormatter from '../../packages/url/URLFormatter.js'\n\nexport default {\n  data() {\n    return {\n      toggles:{\n        menu: false,\n        menuDishes: false,\n        menuDrinks: false,\n        menuAddItem: false,\n      },\n      items: {\n        dishes: [],\n        drinks: [],\n        add:{\n          name: \"\",\n          type: \"\",\n          description: \"\",\n          price: \"\",\n          photo: \"\"\n        }\n      },\n    }\n  },\n  validations:{\n    items:{\n      add:{\n        name: {\n          required\n        },\n        type: {\n          required\n        },\n        description: {\n          required\n        },\n        price: {\n          required\n        },\n        photo: {\n          required\n        },\n      }\n    },\n  },\n  methods: {\n    toggle(section){\n      Toggles.hideAllSections(false, this.toggles);\n\n      if(section === \"menuDishes\"){\n        this.toggles.menu = true;\n        this.toggles.menuDishes = true;\n        return;\n      }\n\n      if(section === \"menuDrinks\"){\n        this.toggles.menu = true;\n        this.toggles.menuDrinks = true;\n        return;\n      }\n\n    },\n    getItems(){\n      ItemsAPI.getItems('api/items').then(items => {\n        items.data.forEach((e,i) => {\n          if(e.type === \"dish\"){\n            this.items.dishes.push(e);\n          }else if(e.type === 'drink'){\n            this.items.drinks.push(e);\n          }\n        });\n      });\n    },\n    groupedItems(items, columns){\n      return _.chunk(items, columns);\n    },\n    onImageChange(e) {\n      let files = e.target.files || e.dataTransfer.files;\n      if (!files.length){\n        toastr.error('Error while uploading photo');\n        return;\n      }\n      this.createImage(files[0]);\n    },\n    imageItem(itemUrl){\n      return URLFormatter.imageItem(itemUrl);\n    },\n    deleteItem(itemID, itemType){\n      ItemsAPI.deleteItem(itemID).then(r => {\n        if(r.status !== 200){\n          swal('Error deleting item', r.data.error.message, 'error');\n          return;\n        }\n\n        toastr.success('Item has been deleted successfully');\n        let items;\n        if(itemType === 'dish'){\n          items = this.items.dishes.slice();\n        }else if(itemType === 'drink'){\n          items = this.items.drinks.slice();\n        }\n        _.remove(items, item => {\n          return item.id === itemID;\n        });\n\n        if(itemType === 'dish'){\n          this.items.dishes = items;\n        }else if(itemType === 'drink'){\n          this.items.drinks = items;\n        }\n      });\n    },\n    createImage(file) {\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        this.items.add.photo = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    postItem(){\n      // Make the validation before sending\n      ItemsAPI.postItem(this.items.add).then(item => {\n        if(item.status !== 200){\n          toastr.error('There was an eror while processing your request');\n          return;\n        }\n\n        if(item.data.type === 'drink'){\n          const drinks = this.items.drinks.slice();\n          drinks.push(item.data);\n          _.orderBy(drinks, o => o.name);\n          this.items.drinks = drinks;\n        }else if(item.data.type === 'dish'){\n          const dishes = this.items.dishes.slice();\n          dishes.push(item.data);\n          _.orderBy(dishes, ['name']);\n          this.items.dishes = dishes;\n        }\n\n        toastr.success(this.items.add.name + ' adicionado com sucesso');\n\n        // Clean item to add\n        this.items.add.name = \"\";\n        this.items.add.type = \"\";\n        this.items.add.description = \"\";\n        this.items.add.price = \"\";\n        this.items.add.photo = \"\";\n\n      })\n    },\n  },\n  created(){\n    this.getItems();\n  }\n};\n</script>\n"],"sourceRoot":"src/pages/Manager"}]}