{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Manager/Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Manager/Table.vue","mtime":1546433593311},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport TablesAPI from \"../../packages/api/Tables.js\";\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport swal from \"sweetalert\";\n\nexport default {\n  data() {\n    return {\n      tables: [],\n    }\n  },\n  methods: {\n    deleteTable(tableID){\n      swal('DELETE TABLE', 'Are you sure you would like to delete this table?', 'warning',{\n        buttons: {\n          cancel: \"NO\",\n          catch:{\n            text: \"YES\",\n            value: true\n          }\n        }\n      }).then((value) => {\n        if(value) {\n          TablesAPI.deleteTable(tableID).then((r) => {\n            if(r.status !== 200){\n              toastr.error('There was an error deleting the table');\n              return false;\n            }\n\n            const tables = this.tables.slice();\n            _.remove(tables, (currTable) => {\n              return currTable.table_number === tableID;\n            });\n            this.tables = tables;\n\n            toastr.success('Table deleted successfully');\n          });\n        }\n      });\n\n    },\n    getAllTables(){\n      TablesAPI.getTables().then((tables) => {\n        this.tables = tables.data;\n      });\n    },\n  },\n  created(){\n    this.getAllTables();\n  }\n};\n",{"version":3,"sources":["Table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Table.vue","sourceRoot":"src/pages/Manager","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item\">\n        <md-card>\n          <md-card-header data-background-color=\"green\">\n            <h4 class=\"title\">Tables</h4>\n          </md-card-header>\n          <md-card-content>\n            <table class=\"table\">\n              <thead>\n              <tr>\n                <th>Table number</th>\n                <th>Created at</th>\n                <th></th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr v-for=\"table in tables\" :key=\"table.id\">\n                <td class=\"pt-4\">{{ table.table_number }}</td>\n                <td class=\"pt-4\">{{ table.created_at }}</td>\n                <td>\n                  <md-tooltip md-direction=\"top\">Delete table</md-tooltip>\n                  <md-button class=\"m-0 md-danger md-block\" @click=\"deleteTable(table.table_number)\"><md-icon>delete_outline</md-icon></md-button>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </md-card-content>\n        </md-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport TablesAPI from \"../../packages/api/Tables.js\";\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport swal from \"sweetalert\";\n\nexport default {\n  data() {\n    return {\n      tables: [],\n    }\n  },\n  methods: {\n    deleteTable(tableID){\n      swal('DELETE TABLE', 'Are you sure you would like to delete this table?', 'warning',{\n        buttons: {\n          cancel: \"NO\",\n          catch:{\n            text: \"YES\",\n            value: true\n          }\n        }\n      }).then((value) => {\n        if(value) {\n          TablesAPI.deleteTable(tableID).then((r) => {\n            if(r.status !== 200){\n              toastr.error('There was an error deleting the table');\n              return false;\n            }\n\n            const tables = this.tables.slice();\n            _.remove(tables, (currTable) => {\n              return currTable.table_number === tableID;\n            });\n            this.tables = tables;\n\n            toastr.success('Table deleted successfully');\n          });\n        }\n      });\n\n    },\n    getAllTables(){\n      TablesAPI.getTables().then((tables) => {\n        this.tables = tables.data;\n      });\n    },\n  },\n  created(){\n    this.getAllTables();\n  }\n};\n</script>\n"]}]}