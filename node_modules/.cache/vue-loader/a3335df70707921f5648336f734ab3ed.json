{"remainingRequest":"/home/alendouro/WebDevelopment/vue-material-dashboard-v1.0.3/vue-material-dashboard-v1.0.3/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/vue-material-dashboard-v1.0.3/vue-material-dashboard-v1.0.3/src/pages/Items.vue?vue&type=template&id=05512068&","dependencies":[{"path":"/home/alendouro/WebDevelopment/vue-material-dashboard-v1.0.3/vue-material-dashboard-v1.0.3/src/pages/Items.vue","mtime":1543899920885},{"path":"/home/alendouro/WebDevelopment/vue-material-dashboard-v1.0.3/vue-material-dashboard-v1.0.3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/vue-material-dashboard-v1.0.3/vue-material-dashboard-v1.0.3/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/vue-material-dashboard-v1.0.3/vue-material-dashboard-v1.0.3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/vue-material-dashboard-v1.0.3/vue-material-dashboard-v1.0.3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n  <div class=\"content\">\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-33\" v-for=\"item in items\" :key=\"item.id\">\n        <img text :src=\"imageItem(item.photo_url)>\n        <div>{{item.name}}</div>        \n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport ItemsAPI from '../packages/api/Items.js';\n\nexport default {\n  data() {\n    return {\n      items: [],\n      pagination: {}\n    };\n  },\n\n  methods: {\n    makePagination(data){\n      this.pagination = {\n        current_page: data.current_page,\n        last_page: data.last_page,\n        next_page_url: data.next_page_url,\n        prev_page_url: data.prev_page_url\n      };\n    },\n\n    fetchItems(pageUrl) {\n      ItemsAPI.getItems(pageUrl || '/api/items?paginate')\n        .then(items => {\n          // Fill the items with the data received from API\n          this.items = items.data;\n          // Fill the pages with the pages and urls necessary\n          this.makePagination(items);\n        })\n        .catch(error => {\n          if (error){\n            swal(' ', 'There was an error while processing the request');\n          }\n        });\n\n      this.$http.get()\n        .then(function (response) {\n          this.makePagination(response);\n          this.$set('items', response.data.data);\n        });\n    },\n    imageItem(itemUrl){\n      return 'http://restaurantmanagement.test/storage/items/' + itemUrl;\n    }\n  },\n\n  created(){\n    this.fetchItems();\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped> \n\n</style>",null]}