{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Manager/Menu.vue?vue&type=template&id=5987ee76&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Manager/Menu.vue","mtime":1546433593311},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _c(\"div\", { staticClass: \"md-layout\" }, [\n      _c(\"div\", { staticClass: \"md-layout-item\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"col-sm-12\" },\n            [\n              _c(\n                \"md-button\",\n                {\n                  staticClass: \"md-info md-block\",\n                  on: {\n                    click: function($event) {\n                      _vm.toggle(\"menuAddItem\")\n                    }\n                  }\n                },\n                [_c(\"md-icon\", [_vm._v(\"add\")])],\n                1\n              )\n            ],\n            1\n          )\n        ]),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"col-sm-6\" },\n            [\n              _c(\n                \"md-button\",\n                {\n                  staticClass: \"md-success md-block\",\n                  on: {\n                    click: function($event) {\n                      _vm.toggle(\"menuDishes\")\n                    }\n                  }\n                },\n                [_vm._v(\"DISHES\")]\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"col-sm-6\" },\n            [\n              _c(\n                \"md-button\",\n                {\n                  staticClass: \"md-success md-block\",\n                  on: {\n                    click: function($event) {\n                      _vm.toggle(\"menuDrinks\")\n                    }\n                  }\n                },\n                [_vm._v(\"DRINKS\")]\n              )\n            ],\n            1\n          )\n        ]),\n        _c(\n          \"div\",\n          {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: this.toggles.menuDishes,\n                expression: \"this.toggles.menuDishes\"\n              }\n            ]\n          },\n          _vm._l(_vm.groupedItems(this.items.dishes, 3), function(dishes) {\n            return _c(\n              \"div\",\n              { key: dishes.id, staticClass: \"row\" },\n              _vm._l(dishes, function(dish) {\n                return _c(\n                  \"div\",\n                  { key: dish.id, staticClass: \"col-md-4\" },\n                  [\n                    _c(\n                      \"md-card\",\n                      [\n                        _c(\n                          \"md-card-header\",\n                          { attrs: { \"data-background-color\": \"green\" } },\n                          [\n                            _c(\"h4\", { staticClass: \"title\" }, [\n                              _vm._v(_vm._s(dish.name))\n                            ]),\n                            _c(\"h6\", [_vm._v(_vm._s(dish.price) + \"€\")])\n                          ]\n                        ),\n                        _c(\n                          \"md-card-content\",\n                          [\n                            _c(\"img\", {\n                              attrs: {\n                                text: \"\",\n                                src:\n                                  \"https://cdn.images.express.co.uk/img/dynamic/14/590x/McDonald-s-burger-876121.jpg\",\n                                alt: dish.name\n                              }\n                            }),\n                            _c(\"br\"),\n                            _c(\n                              \"md-button\",\n                              {\n                                staticClass: \"m-0 md-danger md-block mt-1\",\n                                on: {\n                                  click: function($event) {\n                                    _vm.deleteItem(dish.id, \"dish\")\n                                  }\n                                }\n                              },\n                              [_c(\"md-icon\", [_vm._v(\"delete_outline\")])],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              })\n            )\n          })\n        ),\n        _c(\n          \"div\",\n          {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: this.toggles.menuDrinks,\n                expression: \"this.toggles.menuDrinks\"\n              }\n            ]\n          },\n          _vm._l(_vm.groupedItems(this.items.drinks, 3), function(drinks) {\n            return _c(\n              \"div\",\n              { key: drinks.id, staticClass: \"row\" },\n              _vm._l(drinks, function(drink) {\n                return _c(\n                  \"div\",\n                  { key: drink.id, staticClass: \"col-md-4\" },\n                  [\n                    _c(\n                      \"md-card\",\n                      [\n                        _c(\n                          \"md-card-header\",\n                          { attrs: { \"data-background-color\": \"green\" } },\n                          [\n                            _c(\"h4\", { staticClass: \"title\" }, [\n                              _vm._v(_vm._s(drink.name))\n                            ]),\n                            _c(\"h6\", [_vm._v(_vm._s(drink.price) + \"€\")])\n                          ]\n                        ),\n                        _c(\n                          \"md-card-content\",\n                          [\n                            _c(\"img\", {\n                              attrs: {\n                                text: \"\",\n                                src:\n                                  \"https://cdn.images.express.co.uk/img/dynamic/14/590x/McDonald-s-burger-876121.jpg\",\n                                alt: drink.name\n                              }\n                            }),\n                            _c(\n                              \"md-button\",\n                              {\n                                staticClass: \"m-0 md-danger md-block mt-1\",\n                                on: {\n                                  click: function($event) {\n                                    _vm.deleteItem(drink.id, \"drink\")\n                                  }\n                                }\n                              },\n                              [_c(\"md-icon\", [_vm._v(\"delete_outline\")])],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              })\n            )\n          })\n        ),\n        _c(\n          \"form\",\n          {\n            staticClass: \"form\",\n            on: {\n              submit: function($event) {\n                $event.preventDefault()\n                _vm.postItem()\n              }\n            }\n          },\n          [\n            _c(\"div\", { staticClass: \"form-row\" }, [\n              _c(\"div\", { staticClass: \"col-md-6\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { attrs: { for: \"name\" } }, [_vm._v(\"Name\")]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model.trim\",\n                        value: _vm.items.add.name,\n                        expression: \"items.add.name\",\n                        modifiers: { trim: true }\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { type: \"text\", id: \"name\" },\n                    domProps: { value: _vm.items.add.name },\n                    on: {\n                      input: [\n                        function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.items.add,\n                            \"name\",\n                            $event.target.value.trim()\n                          )\n                        },\n                        function($event) {\n                          _vm.$v.items.add.name.$touch()\n                        }\n                      ],\n                      blur: function($event) {\n                        _vm.$forceUpdate()\n                      }\n                    }\n                  }),\n                  !_vm.$v.items.add.name.required\n                    ? _c(\"p\", { staticClass: \"error-message\" }, [\n                        _vm._v(\"Name must not be empty\")\n                      ])\n                    : _vm._e()\n                ])\n              ]),\n              _c(\"div\", { staticClass: \"col-md-6\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { attrs: { for: \"type\" } }, [_vm._v(\"Type\")]),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model.trim\",\n                          value: _vm.items.add.type,\n                          expression: \"items.add.type\",\n                          modifiers: { trim: true }\n                        }\n                      ],\n                      staticClass: \"custom-select\",\n                      attrs: { id: \"type\" },\n                      on: {\n                        input: function($event) {\n                          _vm.$v.items.add.type.$touch()\n                        },\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.items.add,\n                            \"type\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"drink\" } }, [\n                        _vm._v(\"Drink\")\n                      ]),\n                      _c(\"option\", { attrs: { value: \"dish\" } }, [\n                        _vm._v(\"Dish\")\n                      ])\n                    ]\n                  ),\n                  !_vm.$v.items.add.type.required\n                    ? _c(\"p\", { staticClass: \"error-message\" }, [\n                        _vm._v(\"Type must not be empty\")\n                      ])\n                    : _vm._e()\n                ])\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-row\" }, [\n              _c(\"div\", { staticClass: \"col-md-12\" }, [\n                _c(\"label\", { attrs: { for: \"description\" } }, [\n                  _vm._v(\"Description\")\n                ]),\n                _c(\"textarea\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model.trim\",\n                      value: _vm.items.add.description,\n                      expression: \"items.add.description\",\n                      modifiers: { trim: true }\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { id: \"description\", rows: \"8\" },\n                  domProps: { value: _vm.items.add.description },\n                  on: {\n                    input: [\n                      function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.items.add,\n                          \"description\",\n                          $event.target.value.trim()\n                        )\n                      },\n                      function($event) {\n                        _vm.$v.items.add.description.$touch()\n                      }\n                    ],\n                    blur: function($event) {\n                      _vm.$forceUpdate()\n                    }\n                  }\n                }),\n                !_vm.$v.items.add.description.required\n                  ? _c(\"p\", { staticClass: \"error-message\" }, [\n                      _vm._v(\"Description must not be empty\")\n                    ])\n                  : _vm._e()\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-row\" }, [\n              _c(\"div\", { staticClass: \"col-md-6\" }, [\n                _c(\"label\", { attrs: { for: \"price\" } }, [_vm._v(\"Price\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model.trim\",\n                      value: _vm.items.add.price,\n                      expression: \"items.add.price\",\n                      modifiers: { trim: true }\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"number\", id: \"price\" },\n                  domProps: { value: _vm.items.add.price },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(\n                        _vm.items.add,\n                        \"price\",\n                        $event.target.value.trim()\n                      )\n                    },\n                    blur: function($event) {\n                      _vm.$forceUpdate()\n                    }\n                  }\n                }),\n                !_vm.$v.items.add.price.required\n                  ? _c(\"p\", { staticClass: \"error-message\" }, [\n                      _vm._v(\"Price must not be empty\")\n                    ])\n                  : _vm._e()\n              ]),\n              _c(\"div\", { staticClass: \"col-md-6\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { attrs: { for: \"photo\" } }, [_vm._v(\"Photo\")]),\n                  _c(\"input\", {\n                    staticClass: \"form-control\",\n                    attrs: { type: \"file\", id: \"photo\" },\n                    on: {\n                      input: function($event) {\n                        _vm.$v.items.add.photo.$touch()\n                      },\n                      change: _vm.onImageChange\n                    }\n                  }),\n                  !_vm.$v.items.add.photo.required\n                    ? _c(\"p\", { staticClass: \"error-message\" }, [\n                        _vm._v(\"Photo must not be empty\")\n                      ])\n                    : _vm._e()\n                ])\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"col-md-12\" },\n                [\n                  _c(\n                    \"md-button\",\n                    {\n                      staticClass: \"md-success md-block\",\n                      attrs: {\n                        type: \"submit\",\n                        disabled: _vm.$v.items.add.$invalid\n                      }\n                    },\n                    [_vm._v(\"ADD ITEM\")]\n                  )\n                ],\n                1\n              )\n            ])\n          ]\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}