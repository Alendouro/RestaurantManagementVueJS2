{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Cook/PendingOrder.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Cook/PendingOrder.vue","mtime":1545825970754},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport OrdersAPI from '../../packages/api/Orders.js';\nimport swal from 'sweetalert';\n\nexport default {\n  name: \"pending-order\",\n  data() {\n    return {\n      pendingOrders: [],\n      user: [],\n      backGroundColor: \"green\",\n    };\n  },\n\n  methods: {\n    fetchItems(pageUrl) {\n      this.axios.defaults.headers.common.Authorization = \"Bearer \" + this.$store.state.token;\n      OrdersAPI.getItems(pageUrl || '/api/orders/pending?paginate')\n        .then(pendingOrders => {\n          // Fill the items with the data received from API\n          this.pendingOrders = pendingOrders.data;\n          console.log(this.pendingOrders);\n        })\n        .catch(error => {\n          if (error){\n            swal(' ', 'There was an error while processing the request');\n          }\n        });\n    },\n    changeState(order) {\n      this.axios.defaults.headers.common.Authorization = \"Bearer \" + this.$store.state.token;\n      OrdersAPI.changeState('/api/orders/changeState/' + order.id)\n        .then(response => {\n          // Fill the items with the data received from API\n          console.log(response);\n        })\n        .catch(error => {\n          if (error){\n            swal(' ', 'There was an error while processing the request');\n          }\n        });\n    },\n    imageItem(itemUrl){\n      return 'http://restaurantmanagement.test/storage/items/' + itemUrl;\n    },\n  },\n  created(){\n    this.user = this.$store.state.user;\n    this.fetchItems();   \n  },\n};\n",{"version":3,"sources":["PendingOrder.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PendingOrder.vue","sourceRoot":"src/pages/Cook","sourcesContent":["<template>    \n  <div>\n    <md-table md-card>\n      <md-table-toolbar>\n        <h1 class=\"md-title\">Pending Orders</h1>\n      </md-table-toolbar>\n\n      <md-table-row slot=\"md-table-row\" v-for=\"order in pendingOrders\" :key=\"order.id\">\n        <md-table-cell md-label=\"Name\">{{ order.item.name }}</md-table-cell>\n        <md-button class=\"md-raised md-primary\" data-background-color=\"red\" @click=\"changeState(order)\">Confirm</md-button>\n      </md-table-row>\n    </md-table>\n  </div>\n</template>\n<script>\nimport OrdersAPI from '../../packages/api/Orders.js';\nimport swal from 'sweetalert';\n\nexport default {\n  name: \"pending-order\",\n  data() {\n    return {\n      pendingOrders: [],\n      user: [],\n      backGroundColor: \"green\",\n    };\n  },\n\n  methods: {\n    fetchItems(pageUrl) {\n      this.axios.defaults.headers.common.Authorization = \"Bearer \" + this.$store.state.token;\n      OrdersAPI.getItems(pageUrl || '/api/orders/pending?paginate')\n        .then(pendingOrders => {\n          // Fill the items with the data received from API\n          this.pendingOrders = pendingOrders.data;\n          console.log(this.pendingOrders);\n        })\n        .catch(error => {\n          if (error){\n            swal(' ', 'There was an error while processing the request');\n          }\n        });\n    },\n    changeState(order) {\n      this.axios.defaults.headers.common.Authorization = \"Bearer \" + this.$store.state.token;\n      OrdersAPI.changeState('/api/orders/changeState/' + order.id)\n        .then(response => {\n          // Fill the items with the data received from API\n          console.log(response);\n        })\n        .catch(error => {\n          if (error){\n            swal(' ', 'There was an error while processing the request');\n          }\n        });\n    },\n    imageItem(itemUrl){\n      return 'http://restaurantmanagement.test/storage/items/' + itemUrl;\n    },\n  },\n  created(){\n    this.user = this.$store.state.user;\n    this.fetchItems();   \n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped> \n\n</style>"]}]}