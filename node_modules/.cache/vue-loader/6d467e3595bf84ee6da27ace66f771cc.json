{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Layout/DashboardLayout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Layout/DashboardLayout.vue","mtime":1546772991517},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TopNavbar from \"./TopNavbar.vue\";\nimport ContentFooter from \"./ContentFooter.vue\";\nimport DashboardContent from \"./Content.vue\";\nimport MobileMenu from \"@/pages/Layout/MobileMenu.vue\";\nimport toastr from 'toastr';  \n//import UserAPI from \"../../packages/api/Users.js\";\n\nexport default {\n  components: {\n    TopNavbar,\n    DashboardContent,\n    ContentFooter,\n    MobileMenu\n  },\n   data() {\n    return {\n      user: [],\n    };\n  },\n  methods: {\n    getTo(section){\n      this.$router.push(this.user.type + '/' + section);\n    },\n    startShift(){\n      this.axios.put('/api/user/startShift/' + this.user.id)\n      .then(response => {\n        this.$store.commit('setUser', response.data);\n        this.user = this.$store.state.user;\n        if (this.user.type == \"manager\"){\n          this.$socket.emit('user_enter', this.user);\n        }\n        toastr.success(\"You're now working!\");\n      })\n      .catch(error => {\n        if (error){\n          toastr.error(\"There was an internal error\");\n          return false;\n        }\n      })\n    },\n    endShift(){\n      this.axios.put('/api/user/endShift/' + this.user.id)\n      .then(response => {\n        this.$store.commit('setUser', response.data);\n        this.user = this.$store.state.user;\n        if(this.user.type == \"manager\"){\n          this.$socket.emit('user_exit', this.user);\n        }\n        toastr.success(\"You just ended your shift\");\n      })\n      .catch(error => {\n        if (error){\n          this.$socket.emit('user_exit', this.$store.state.user);\n          toastr.error(\"There was an internal error\");\n          return false;\n        }\n      })\n    },\n    notifyVue(verticalAlign, horizontalAlign, message) {\n      this.$notify({\n        message: message,\n        icon: \"add_alert\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"danger\"\n      });\n    }\n  },\n  sockets:{\n    connect(){\n      console.log('socket connected (socket ID = '+this.$socket.id+')');\n      },\n      msg_from_server(dataFromServer){\n        this.notifyVue('top','right', dataFromServer);\n      },\n      msg_from_user_to_managers(dataFromServer){\n        this.notifyVue('top','right', dataFromServer);\n      },\n    },\n  computed: {\n    loggedIn() {\n      return this.$store.getters.loggedIn;\n    },\n  },\n  created(){\n    this.user = this.$store.state.user;\n  }\n};\n",{"version":3,"sources":["DashboardLayout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DashboardLayout.vue","sourceRoot":"src/pages/Layout","sourcesContent":["<template>\n  <div class=\"wrapper\" :class=\"{'nav-open': $sidebar.showSidebar}\">\n    <notifications></notifications>\n    <side-bar>\n      <mobile-menu slot=\"content\"></mobile-menu>\n      <a @click.prevent=\"startShift\" >\n        <sidebar-link v-if=\"loggedIn &&  !user.shift_active\" class=\"showOnLogin\" to=\"#\">\n          <md-icon>work</md-icon>\n          <p>Start Shift</p> \n         <!-- <p>Last Shift Ended: {{Math.floor(this.$moment.duration(this.$moment(new Date()).diff(user.last_shift_end)).asHours()) }}h</p> -->\n        </sidebar-link>\n      </a>\n      <a @click.prevent=\"endShift\" >\n        <sidebar-link v-if=\"loggedIn && user.shift_active\" class=\"showOnLogin\" to=\"#\">\n          <md-icon>work</md-icon>\n         <p>End Shift</p>\n          <!-- <p> Working since: {{user.last_shift_start}}</p> -->\n          <!-- <p>Y're working for {{Math.floor(this.$moment.duration(this.$moment(new Date()).diff(user.last_shift_start)).asHours()) }}h now - End Shift</p> -->\n        </sidebar-link>\n      </a> \n      <!-- All Users -->\n       <sidebar-link to=\"/items\">\n        <md-icon>fastfood</md-icon>\n        <p>Items</p>\n      </sidebar-link>\n      <sidebar-link v-if=\"loggedIn\" class=\"showOnLogin\" to=\"/user\">\n        <md-icon>person</md-icon>\n        <p>User Profile</p>\n      </sidebar-link>\n      <!-- Cooker --> \n      <sidebar-link v-if=\"loggedIn && user.type == 'cook' \" class=\"showOnLogin\"  to=\"/cook\">\n        <md-icon>dashboard</md-icon>\n        <p>Dashboard</p>\n      </sidebar-link>\n      \n      <!-- Waiter -->\n      <sidebar-link v-if=\"loggedIn && user.type == 'waiter' \" class=\"showOnLogin\"  to=\"/waiter/dashboard\">\n        <md-icon>dashboard</md-icon>\n        <p>Dashboard</p>\n      </sidebar-link>\n\n       <sidebar-link v-if=\"loggedIn && user.type == 'waiter' \" class=\"showOnLogin\"  to=\"/waiter/orders\">\n        <md-icon>edit</md-icon>\n        <p>Orders</p>\n      </sidebar-link>\n\n      <!-- Cashier -->\n      <sidebar-link v-if=\"loggedIn && user.type == 'cashier' \" class=\"showOnLogin\"  to=\"/cashier/dashboard\">\n        <md-icon>dashboard</md-icon>\n        <p>Dashboard</p>\n      </sidebar-link>\n\n       <!-- Manager -->\n      <sidebar-link v-if=\"loggedIn && user.type == 'manager' \" class=\"showOnLogin\"  to=\"/manager/dashboard\">\n        <md-icon>dashboard</md-icon>\n        <p>Dashboard</p>\n      </sidebar-link>\n\n      <sidebar-link v-if=\"loggedIn && user.type == 'manager' \" class=\"showOnLogin\"  to=\"/manager/meals\">\n        <md-icon>book</md-icon>\n        <p>Meals</p>\n      </sidebar-link>\n      \n      <sidebar-link v-if=\"loggedIn && user.type == 'manager' \" class=\"showOnLogin\"  to=\"/manager/tables\">\n        <md-icon>table_chart</md-icon>\n        <p>Tables</p>\n      </sidebar-link>\n\n      <sidebar-link v-if=\"loggedIn && user.type == 'manager' \" class=\"showOnLogin\"  to=\"/manager/menu\">\n        <md-icon>create</md-icon>\n        <p>Menu</p>\n      </sidebar-link>\n\n      <sidebar-link v-if=\"loggedIn && user.type == 'manager' \" class=\"showOnLogin\"  to=\"/manager/users\">\n        <md-icon>people</md-icon>\n        <p>Users</p>\n      </sidebar-link>\n\n      <sidebar-link v-if=\"loggedIn && user.type == 'manager' \" class=\"showOnLogin\"  to=\"/manager/invoices\">\n        <md-icon>euro_symbol</md-icon>\n        <p>Invoices</p>\n      </sidebar-link>\n\n      <sidebar-link v-if=\"loggedIn && user.type == 'manager' \" class=\"showOnLogin\"  to=\"/manager/stats\">\n        <md-icon>timeline</md-icon>\n        <p>Statistics</p>\n      </sidebar-link>\n\n      <sidebar-link v-if=\"loggedIn\" class=\"showOnLogin\" to=\"/notifications\">\n        <md-icon>notifications</md-icon>\n        <p>Notifications</p>\n      </sidebar-link>\n    </side-bar>\n\n    <div class=\"main-panel\">\n      <top-navbar></top-navbar>\n\n      <dashboard-content>\n\n      </dashboard-content>\n\n      <content-footer v-if=\"!$route.meta.hideFooter\"></content-footer>\n    </div>\n  </div>\n</template>\n<style lang=\"scss\">\n</style>\n<script>\nimport TopNavbar from \"./TopNavbar.vue\";\nimport ContentFooter from \"./ContentFooter.vue\";\nimport DashboardContent from \"./Content.vue\";\nimport MobileMenu from \"@/pages/Layout/MobileMenu.vue\";\nimport toastr from 'toastr';  \n//import UserAPI from \"../../packages/api/Users.js\";\n\nexport default {\n  components: {\n    TopNavbar,\n    DashboardContent,\n    ContentFooter,\n    MobileMenu\n  },\n   data() {\n    return {\n      user: [],\n    };\n  },\n  methods: {\n    getTo(section){\n      this.$router.push(this.user.type + '/' + section);\n    },\n    startShift(){\n      this.axios.put('/api/user/startShift/' + this.user.id)\n      .then(response => {\n        this.$store.commit('setUser', response.data);\n        this.user = this.$store.state.user;\n        if (this.user.type == \"manager\"){\n          this.$socket.emit('user_enter', this.user);\n        }\n        toastr.success(\"You're now working!\");\n      })\n      .catch(error => {\n        if (error){\n          toastr.error(\"There was an internal error\");\n          return false;\n        }\n      })\n    },\n    endShift(){\n      this.axios.put('/api/user/endShift/' + this.user.id)\n      .then(response => {\n        this.$store.commit('setUser', response.data);\n        this.user = this.$store.state.user;\n        if(this.user.type == \"manager\"){\n          this.$socket.emit('user_exit', this.user);\n        }\n        toastr.success(\"You just ended your shift\");\n      })\n      .catch(error => {\n        if (error){\n          this.$socket.emit('user_exit', this.$store.state.user);\n          toastr.error(\"There was an internal error\");\n          return false;\n        }\n      })\n    },\n    notifyVue(verticalAlign, horizontalAlign, message) {\n      this.$notify({\n        message: message,\n        icon: \"add_alert\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"danger\"\n      });\n    }\n  },\n  sockets:{\n    connect(){\n      console.log('socket connected (socket ID = '+this.$socket.id+')');\n      },\n      msg_from_server(dataFromServer){\n        this.notifyVue('top','right', dataFromServer);\n      },\n      msg_from_user_to_managers(dataFromServer){\n        this.notifyVue('top','right', dataFromServer);\n      },\n    },\n  computed: {\n    loggedIn() {\n      return this.$store.getters.loggedIn;\n    },\n  },\n  created(){\n    this.user = this.$store.state.user;\n  }\n};\n</script>\n"]}]}