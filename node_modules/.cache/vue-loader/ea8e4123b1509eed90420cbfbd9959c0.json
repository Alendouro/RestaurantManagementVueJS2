{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Cook/CookOrdersConfirmed.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Cook/CookOrdersConfirmed.vue","mtime":1546570751684},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport OrdersAPI from '../../packages/api/Orders.js';\nimport swal from 'sweetalert';\nimport { PendingOrders } from \"@/pages\";\n\nexport default {\n  name: \"cook-orders-confirmed\",\n  data() {\n    return {\n      orders: [],\n      pagination: {},\n      user: [],\n      backGroundColor: \"green\",\n    };\n  },\n\n  methods: {\n    fetchItems(pageUrl) {\n      this.axios.defaults.headers.common.Authorization = \"Bearer \" + this.$store.state.token;\n      //Get orders of cook\n      OrdersAPI.getItems(pageUrl || '/api/orders/' + this.user.id + '/confirmed' + '?paginate')\n        .then(orders => {\n          // Fill the items with the data received from API\n          this.orders = orders.data;\n        })\n        .catch(error => {\n          if (error){\n            swal(' ', 'There was an error while processing the request');\n          }\n        });\n    },\n    updateState(order){\n      console.log(order);\n      OrdersAPI.changeState('/api/orders/changeState/' + order.id);\n    }\n  },\n  created(){\n    this.user = this.$store.state.user;\n    this.fetchItems();   \n  },\n};\n",{"version":3,"sources":["CookOrdersConfirmed.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CookOrdersConfirmed.vue","sourceRoot":"src/pages/Cook","sourcesContent":["<template>\n<md-table md-card>\n      <md-table-toolbar data-background-color=\"orange\">\n        <h1 class=\"md-title\">Confirmed</h1>\n      </md-table-toolbar>\n\n      <md-table-row slot=\"md-table-row\" v-for=\"order in orders\" :key=\"order.id\">\n        <md-table-cell md-label=\"Name\">{{ order.item.name }}</md-table-cell>\n        <md-table-cell md-label=\"State\">{{ order.state }}</md-table-cell>\n        <md-button class=\"md-raised md-primary\" data-background-color=\"orange\" @click=\"updateState(order)\">Change state</md-button>\n      </md-table-row>\n    </md-table>\n</template>\n<script>\nimport OrdersAPI from '../../packages/api/Orders.js';\nimport swal from 'sweetalert';\nimport { PendingOrders } from \"@/pages\";\n\nexport default {\n  name: \"cook-orders-confirmed\",\n  data() {\n    return {\n      orders: [],\n      pagination: {},\n      user: [],\n      backGroundColor: \"green\",\n    };\n  },\n\n  methods: {\n    fetchItems(pageUrl) {\n      this.axios.defaults.headers.common.Authorization = \"Bearer \" + this.$store.state.token;\n      //Get orders of cook\n      OrdersAPI.getItems(pageUrl || '/api/orders/' + this.user.id + '/confirmed' + '?paginate')\n        .then(orders => {\n          // Fill the items with the data received from API\n          this.orders = orders.data;\n        })\n        .catch(error => {\n          if (error){\n            swal(' ', 'There was an error while processing the request');\n          }\n        });\n    },\n    updateState(order){\n      console.log(order);\n      OrdersAPI.changeState('/api/orders/changeState/' + order.id);\n    }\n  },\n  created(){\n    this.user = this.$store.state.user;\n    this.fetchItems();   \n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped> \n\n</style>\n"]}]}