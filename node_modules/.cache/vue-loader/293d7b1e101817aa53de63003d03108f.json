{"remainingRequest":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Manager/Users.vue?vue&type=template&id=072dfe12&","dependencies":[{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/src/pages/Manager/Users.vue","mtime":1546657944214},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alendouro/WebDevelopment/RestaurantManagementVueJS2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _c(\"div\", { staticClass: \"md-layout\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"md-layout-item\" },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-md-6\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"user_name\" } }, [_vm._v(\"Name\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.users.edit.name,\n                      expression: \"users.edit.name\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"text\", id: \"user_name\" },\n                  domProps: { value: _vm.users.edit.name },\n                  on: {\n                    input: [\n                      function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.users.edit, \"name\", $event.target.value)\n                      },\n                      function($event) {\n                        _vm.$v.users.edit.name.$touch()\n                      }\n                    ]\n                  }\n                }),\n                !_vm.$v.users.edit.name.required\n                  ? _c(\"p\", { staticClass: \"error-message\" }, [\n                      _vm._v(\"Name must not be empty\")\n                    ])\n                  : _vm._e()\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"col-md-6\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"user_username\" } }, [\n                  _vm._v(\"Username\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.users.edit.username,\n                      expression: \"users.edit.username\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"text\", id: \"user_username\" },\n                  domProps: { value: _vm.users.edit.username },\n                  on: {\n                    input: [\n                      function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.users.edit,\n                          \"username\",\n                          $event.target.value\n                        )\n                      },\n                      function($event) {\n                        _vm.$v.users.edit.username.$touch()\n                      }\n                    ]\n                  }\n                }),\n                !_vm.$v.users.edit.username.required\n                  ? _c(\"p\", { staticClass: \"error-message\" }, [\n                      _vm._v(\"Username must not be empty\")\n                    ])\n                  : _vm._e()\n              ])\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-md-6\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"user_email\" } }, [\n                  _vm._v(\"Email\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.users.edit.email,\n                      expression: \"users.edit.email\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"text\", id: \"user_email\" },\n                  domProps: { value: _vm.users.edit.email },\n                  on: {\n                    input: [\n                      function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.users.edit, \"email\", $event.target.value)\n                      },\n                      function($event) {\n                        _vm.$v.users.edit.email.$touch()\n                      }\n                    ]\n                  }\n                }),\n                !_vm.$v.users.edit.email.required\n                  ? _c(\"p\", { staticClass: \"error-message\" }, [\n                      _vm._v(\"Email must not be empty\")\n                    ])\n                  : _vm._e(),\n                !_vm.$v.users.edit.email.email\n                  ? _c(\"p\", { staticClass: \"error-message\" }, [\n                      _vm._v(\"This is not a valid email format\")\n                    ])\n                  : _vm._e()\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"col-md-6\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"type\" } }, [_vm._v(\"Type\")]),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.users.edit.type,\n                        expression: \"users.edit.type\"\n                      }\n                    ],\n                    staticClass: \"custom-select\",\n                    attrs: { id: \"user_type\" },\n                    on: {\n                      input: function($event) {\n                        _vm.$v.users.edit.type.$touch()\n                      },\n                      change: function($event) {\n                        var $$selectedVal = Array.prototype.filter\n                          .call($event.target.options, function(o) {\n                            return o.selected\n                          })\n                          .map(function(o) {\n                            var val = \"_value\" in o ? o._value : o.value\n                            return val\n                          })\n                        _vm.$set(\n                          _vm.users.edit,\n                          \"type\",\n                          $event.target.multiple\n                            ? $$selectedVal\n                            : $$selectedVal[0]\n                        )\n                      }\n                    }\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"cashier\" } }, [\n                      _vm._v(\"Cashier\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"waiter\" } }, [\n                      _vm._v(\"Waiter\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"cook\" } }, [\n                      _vm._v(\"Cook\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"manager\" } }, [\n                      _vm._v(\"Manager\")\n                    ])\n                  ]\n                ),\n                !_vm.$v.users.edit.type.required\n                  ? _c(\"p\", { staticClass: \"error-message\" }, [\n                      _vm._v(\"Type must not be empty\")\n                    ])\n                  : _vm._e()\n              ])\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-md-6\" }),\n            _c(\"div\", { staticClass: \"col-md-6\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"user_blocked\" } }, [\n                  _vm._v(\"Blocked\")\n                ]),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.users.edit.blocked,\n                        expression: \"users.edit.blocked\"\n                      }\n                    ],\n                    staticClass: \"custom-select\",\n                    attrs: { id: \"user_blocked\" },\n                    on: {\n                      input: function($event) {\n                        _vm.$v.users.edit.blocked.$touch()\n                      },\n                      change: function($event) {\n                        var $$selectedVal = Array.prototype.filter\n                          .call($event.target.options, function(o) {\n                            return o.selected\n                          })\n                          .map(function(o) {\n                            var val = \"_value\" in o ? o._value : o.value\n                            return val\n                          })\n                        _vm.$set(\n                          _vm.users.edit,\n                          \"blocked\",\n                          $event.target.multiple\n                            ? $$selectedVal\n                            : $$selectedVal[0]\n                        )\n                      }\n                    }\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"1\" } }, [\n                      _vm._v(\"Blocked\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"0\" } }, [\n                      _vm._v(\"Not blocked\")\n                    ])\n                  ]\n                ),\n                !_vm.$v.users.edit.blocked.required\n                  ? _c(\"p\", { staticClass: \"error-message\" }, [\n                      _vm._v(\"Blocked must not be empty\")\n                    ])\n                  : _vm._e()\n              ])\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"col-sm-12\" },\n              [\n                _c(\n                  \"md-button\",\n                  {\n                    staticClass: \"md-info md-block mt-1\",\n                    attrs: { disabled: _vm.$v.users.edit.$invalid },\n                    on: {\n                      click: function($event) {\n                        _vm.saveUser()\n                      }\n                    }\n                  },\n                  [_vm._v(\"SAVE USER\")]\n                ),\n                _c(\n                  \"md-button\",\n                  {\n                    staticClass: \"m-0 md-info md-block mt-1\",\n                    on: {\n                      click: function($event) {\n                        _vm.sendEmail()\n                      }\n                    }\n                  },\n                  [_vm._v(\"Send Email\")]\n                )\n              ],\n              1\n            )\n          ]),\n          _vm._l(_vm.groupedItems(this.users.all, 3), function(users) {\n            return _c(\n              \"div\",\n              { key: users.id, staticClass: \"row\" },\n              _vm._l(users, function(user) {\n                return _c(\n                  \"div\",\n                  { key: user.id, staticClass: \"col-md-4\" },\n                  [\n                    _c(\n                      \"md-card\",\n                      [\n                        _c(\n                          \"md-card-header\",\n                          { attrs: { \"data-background-color\": \"green\" } },\n                          [\n                            _c(\"h4\", { staticClass: \"title\" }, [\n                              _vm._v(_vm._s(user.name))\n                            ]),\n                            _c(\"h5\", { staticClass: \"title\" }, [\n                              _vm._v(_vm._s(user.email))\n                            ]),\n                            _c(\"h5\", { staticClass: \"title\" }, [\n                              _vm._v(_vm._s(user.type))\n                            ])\n                          ]\n                        ),\n                        _c(\"md-card-content\", [\n                          _c(\"img\", {\n                            attrs: {\n                              src:\n                                \"https://www.bnl.gov/today/body_pics/2017/06/stephanhruszkewycz-hr.jpg\",\n                              alt: user.name\n                            }\n                          }),\n                          _c(\"br\"),\n                          _c(\"div\", { staticClass: \"row\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"col-md-12\" },\n                              [\n                                _c(\n                                  \"md-button\",\n                                  {\n                                    staticClass: \"m-0 md-info md-block mt-1\",\n                                    on: {\n                                      click: function($event) {\n                                        _vm.editUser(user)\n                                      }\n                                    }\n                                  },\n                                  [_c(\"md-icon\", [_vm._v(\"edit\")])],\n                                  1\n                                ),\n                                _c(\n                                  \"md-button\",\n                                  {\n                                    staticClass: \"m-0 md-danger md-block mt-1\",\n                                    on: {\n                                      click: function($event) {\n                                        _vm.deleteUser(user)\n                                      }\n                                    }\n                                  },\n                                  [_c(\"md-icon\", [_vm._v(\"delete_outline\")])],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ])\n                        ])\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              })\n            )\n          })\n        ],\n        2\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}